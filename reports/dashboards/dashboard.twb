<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeSingleValueFieldV1 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='dashboard_17525914309690' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='City Filter' datatype='string' name='[City Parameter (copy)_2655997914434125864]' param-domain-type='any' role='measure' type='nominal' value='&quot;Jackson&quot;'>
        <calculation class='tableau' formula='&quot;Jackson&quot;' />
      </column>
      <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Quantity&quot;' />
        </members>
      </column>
      <column caption='Select Date' datatype='date' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2017-05-05#'>
        <calculation class='tableau' formula='#2017-05-05#' />
      </column>
      <column caption='Time Drill Down' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
        <calculation class='tableau' formula='&quot;Year&quot;' />
        <members>
          <member value='&quot;Year&quot;' />
          <member value='&quot;Quarter&quot;' />
          <member value='&quot;Month&quot;' />
          <member value='&quot;Week&quot;' />
          <member value='&quot;Day&quot;' />
        </members>
      </column>
      <column caption='Switch Profit, DiscountAmount' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
        <calculation class='tableau' formula='&quot;Profit&quot;' />
        <members>
          <member value='&quot;Profit&quot;' />
          <member value='&quot;DiscountAmount&quot;' />
          <member value='&quot;Profit vs DiscountAmount&quot;' />
        </members>
      </column>
      <column caption='Switch Segment' datatype='string' datatype-customized='true' name='[Parameter 5]' param-domain-type='list' role='measure' type='nominal' value='&quot;Corporate&quot;'>
        <calculation class='tableau' formula='&quot;Corporate&quot;' />
        <members>
          <member value='&quot;Consumer&quot;' />
          <member value='&quot;Home Office&quot;' />
          <member value='&quot;Corporate&quot;' />
          <member value='&quot;All&quot;' />
        </members>
      </column>
      <column caption='Region Parameter' datatype='string' name='[Parameter 6]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='State Parameter' datatype='string' name='[Region Parameter (copy 2)_2655997914426990626]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='City Parameter' datatype='string' name='[Region Parameter (copy)_2655997914426970145]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='Region Filter' datatype='string' name='[Region Parameter (copy)_2655997914434125862]' param-domain-type='any' role='measure' type='nominal' value='&quot;West&quot;'>
        <calculation class='tableau' formula='&quot;West&quot;' />
      </column>
      <column caption='State Filter' datatype='string' name='[State Parameter (copy)_2655997914434125863]' param-domain-type='any' role='measure' type='nominal' value='&quot;Mississippi&quot;'>
        <calculation class='tableau' formula='&quot;Mississippi&quot;' />
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Sales&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quantity&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='Sample-Superstore_processed' inline='true' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample-Superstore_processed' name='textscan.14q38ef1q41g9v15hqzbv1rt9u5k'>
            <connection class='textscan' directory='C:/Users/olive/data_science/code_academy/Project-4_supastore/data/processed' filename='Sample-Superstore_processed.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.14q38ef1q41g9v15hqzbv1rt9u5k' name='Sample-Superstore_processed.csv' table='[Sample-Superstore_processed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
            <column datatype='datetime' name='OrderDate' ordinal='0' />
            <column datatype='string' name='ProductID' ordinal='1' />
            <column datatype='string' name='CustomerID' ordinal='2' />
            <column datatype='integer' name='ShipmentID' ordinal='3' />
            <column datatype='string' name='OrderReference' ordinal='4' />
            <column datatype='integer' name='Quantity' ordinal='5' />
            <column datatype='real' name='Discount' ordinal='6' />
            <column datatype='real' name='Sales' ordinal='7' />
            <column datatype='real' name='Profit' ordinal='8' />
            <column datatype='real' name='DiscountAmount' ordinal='9' />
            <column datatype='real' name='SalesWoDiscount' ordinal='10' />
            <column datatype='string' name='CustomerName' ordinal='11' />
            <column datatype='string' name='Segment' ordinal='12' />
            <column datatype='string' name='ProductName' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='SubCategory' ordinal='15' />
            <column datatype='datetime' name='ShipDate' ordinal='16' />
            <column datatype='string' name='ShipMode' ordinal='17' />
            <column datatype='integer' name='PostalCode' ordinal='18' />
            <column datatype='string' name='City' ordinal='19' />
            <column datatype='string' name='Country' ordinal='20' />
            <column datatype='string' name='Region' ordinal='21' />
            <column datatype='string' name='State' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;\&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[OrderDate]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>OrderDate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ProductID]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>ProductID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CustomerID]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>CustomerID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ShipmentID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ShipmentID]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>ShipmentID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderReference</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OrderReference]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>OrderReference</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DiscountAmount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DiscountAmount]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>DiscountAmount</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalesWoDiscount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SalesWoDiscount]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>SalesWoDiscount</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CustomerName]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>CustomerName</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ProductName]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>ProductName</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SubCategory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SubCategory]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>SubCategory</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ShipDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ShipDate]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>ShipDate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ShipMode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ShipMode]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>ShipMode</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostalCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PostalCode]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>PostalCode</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sample-Superstore_processed.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales, Profit, Quantity' datatype='real' name='[Calculation_1375568242964336640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] &#13;&#10;WHEN &quot;Sales&quot; THEN [Sales] &#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]  &#13;&#10;END' />
      </column>
      <column caption='SPQ per Item' datatype='real' name='[Calculation_1375568244024266753]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1375568242964336640])/SUM([Quantity])' />
      </column>
      <column caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_1375568244026716162]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit]) / sum([Sales])' />
      </column>
      <column caption='Sales - Current Year' datatype='real' name='[Calculation_2655997913778466819]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([OrderDate]) = YEAR([Parameters].[Parameter 2]) THEN [Calculation_1375568242964336640] END' />
      </column>
      <column caption='Sales - Previous Year' datatype='real' name='[Calculation_2655997913778642948]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([OrderDate]) = YEAR([Parameters].[Parameter 2]) - 1 THEN [Calculation_1375568242964336640] END' />
      </column>
      <column caption='Sales - YoY % Change' datatype='real' name='[Calculation_2655997913778880517]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_2655997913778466819]) - SUM([Calculation_2655997913778642948]) / SUM([Calculation_2655997913778642948])' />
      </column>
      <column caption='Sales - CY YTD' datatype='real' name='[Calculation_2655997913779695622]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([OrderDate]) = YEAR([Parameters].[Parameter 2]) AND [OrderDate] &lt;= [Parameters].[Parameter 2]&#13;&#10;THEN [Calculation_1375568242964336640]&#13;&#10;END' />
      </column>
      <column caption='Sales - PY YTD' datatype='real' name='[Calculation_2655997913779851271]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([OrderDate]) = YEAR([Parameters].[Parameter 2])-1 AND [OrderDate] &lt;= DATEADD(&apos;year&apos;, -1, [Parameters].[Parameter 2])&#13;&#10;THEN [Calculation_1375568242964336640]&#13;&#10;END' />
      </column>
      <column caption='OrderDateDyn' datatype='date' datatype-customized='true' name='[Calculation_2655997913799688201]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATE(CASE [Parameters].[Parameter 3] &#13;&#10;WHEN &apos;Year&apos;     THEN DATETRUNC(&apos;year&apos;, [OrderDate])&#13;&#10;WHEN &apos;Quarter&apos;  THEN DATETRUNC(&apos;quarter&apos;, [OrderDate])&#13;&#10;WHEN &apos;Month&apos;    THEN DATETRUNC(&apos;month&apos;, [OrderDate])&#13;&#10;WHEN &apos;Week&apos;     THEN DATETRUNC(&apos;week&apos;, [OrderDate])&#13;&#10;WHEN &apos;Day&apos;      THEN DATETRUNC(&apos;day&apos;, [OrderDate])&#13;&#10;END)' />
      </column>
      <column caption='Profit, DiscountAmount' datatype='real' name='[Calculation_2655997913806688267]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 4]&#13;&#10;WHEN &apos;Profit&apos; THEN SUM([Profit])&#13;&#10;WHEN &apos;DiscountAmount&apos; THEN SUM([DiscountAmount])&#13;&#10;WHEN &apos;Profit vs DiscountAmount&apos; THEN [Profit Margin (copy)_2655997913806389258]&#13;&#10;END' />
      </column>
      <column caption='Orders per Day' datatype='integer' name='[Calculation_2655997914087362576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [OrderDate]: COUNTD([OrderReference])}' />
      </column>
      <column caption='Customers per Segment' datatype='real' name='[Calculation_2655997914095648787]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 5]&#13;&#10;WHEN &apos;Consumer&apos;         THEN COUNTD(IF [Segment] = &apos;Consumer&apos; THEN [CustomerID] END) / COUNTD([CustomerID])&#13;&#10;WHEN &apos;Home Office&apos;      THEN COUNTD(IF [Segment] = &apos;Home Office&apos; THEN [CustomerID] END) / COUNTD([CustomerID])&#13;&#10;WHEN &apos;Corporate&apos;        THEN COUNTD(IF [Segment] = &apos;Corporate&apos; THEN [CustomerID] END) / COUNTD([CustomerID])&#13;&#10;WHEN &apos;All&apos;              THEN SUM({FIXED State: COUNTD([CustomerID])}) / SUM({FIXED [State],[Segment]: COUNTD([CustomerID])})&#13;&#10;END' />
      </column>
      <column caption='Average Order Value' datatype='real' name='[Calculation_2655997914145599512]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / COUNTD([OrderReference])' />
      </column>
      <column caption='Purchase Frequency 1' datatype='real' name='[Calculation_2655997914229612569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Orders (copy)_2655997914230960154] / COUNTD([CustomerID])' />
      </column>
      <column caption='First Purchase Date' datatype='date' name='[Calculation_2655997914242748447]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{FIXED [CustomerID] : MIN([OrderDate])}' />
      </column>
      <column caption='Orders per Customer' datatype='integer' name='[Calculation_2655997914244976672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [CustomerID]: COUNTD([OrderReference])}' />
      </column>
      <column caption='DZV Region' datatype='boolean' name='[Calculation_2655997914430701603]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 6]=&apos;&apos;&#13;&#10;AND&#13;&#10;[Parameters].[Region Parameter (copy 2)_2655997914426990626]=&apos;&apos;&#13;&#10;AND&#13;&#10;[Parameters].[Region Parameter (copy)_2655997914426970145]!=&apos;&apos;' />
      </column>
      <column caption='Region Filter' datatype='boolean' name='[Calculation_2655997914434486313]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Region] = [Parameters].[Region Parameter (copy)_2655997914434125862]' />
      </column>
      <column caption='State Filter' datatype='boolean' name='[Calculation_2655997914436431914]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[State] = [Parameters].[State Parameter (copy)_2655997914434125863]' />
      </column>
      <column caption='City Filter' datatype='boolean' name='[Calculation_2655997914436632619]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[City] = [Parameters].[City Parameter (copy)_2655997914434125864]' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column aggregate-role-from='[PostalCode]' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregate-role-from='[Region]' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='DZV State' datatype='boolean' name='[DZV Region (copy 2)_2655997914430922789]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 6]!=&apos;&apos;&#13;&#10;AND&#13;&#10;[Parameters].[Region Parameter (copy 2)_2655997914426990626]=&apos;&apos;&#13;&#10;AND&#13;&#10;[Parameters].[Region Parameter (copy)_2655997914426970145]=&apos;&apos;' />
      </column>
      <column caption='DZV City' datatype='boolean' name='[DZV Region (copy)_2655997914430910500]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 6]=&apos;&apos;&#13;&#10;AND&#13;&#10;[Parameters].[Region Parameter (copy 2)_2655997914426990626]!=&apos;&apos;&#13;&#10;AND&#13;&#10;[Parameters].[Region Parameter (copy)_2655997914426970145]=&apos;&apos;' />
      </column>
      <column datatype='real' name='[DiscountAmount]' role='measure' type='quantitative' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
      <column caption='Orders' datatype='integer' name='[Orders (copy)_2655997914230960154]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([OrderReference])' />
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[PostalCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='DiscountAmount vs Profit' datatype='real' name='[Profit Margin (copy)_2655997913806389258]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([DiscountAmount]) / sum([Profit])' />
      </column>
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column caption='Purchase Frequency 1 (copy)' datatype='real' name='[Purchase Frequency 1 (copy)_2655997914240675869]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED : COUNTD([OrderReference])} / {FIXED : COUNTD([CustomerID])}' />
      </column>
      <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Sales - YoY YTD % Change' datatype='real' default-format='p0%' name='[Sales - YoY % Change (copy)_2655997913782439944]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_2655997913779695622]) - SUM([Calculation_2655997913779851271])) / SUM([Calculation_2655997913779851271])' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Sample-Superstore_processed.csv' datatype='table' name='[__tableau_internal_object_id__].[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1375568244026716162]' derivation='Attribute' name='[attr:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1375568244026716162]' derivation='Sum' name='[cum:sum:Calculation_1375568244026716162:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1375568244026716162]' derivation='Sum' name='[cum:sum:Calculation_1375568244026716162:qk:3]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1375568244026716162]' derivation='Sum' name='[cum:sum:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[twk:OrderDate:qk]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1375568244026716162]' derivation='Sum' name='[diff:cum:sum:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[diff:sum:Calculation_1375568242964336640:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1375568244026716162]' derivation='Sum' name='[diff:sum:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1375568244026716162]' derivation='None' name='[none:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[pcdf:sum:Calculation_1375568242964336640:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[sum:Calculation_1375568242964336640:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1375568244026716162]' derivation='Sum' name='[sum:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2655997913779695622]' derivation='Sum' name='[sum:Calculation_2655997913779695622:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2655997913779851271]' derivation='Sum' name='[sum:Calculation_2655997913779851271:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DiscountAmount]' derivation='Sum' name='[sum:DiscountAmount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OrderDate]' derivation='Week-Trunc' name='[twk:OrderDate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1375568244026716162]' derivation='User' name='[usr:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2655997913806688267]' derivation='User' name='[usr:Calculation_2655997913806688267:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit Margin (copy)_2655997913806389258]' derivation='User' name='[usr:Profit Margin (copy)_2655997913806389258:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OrderDate]' derivation='Year' name='[yr:OrderDate:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country,Region,State)' hidden='true' name='[Action (Country,Region,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country,Region,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Region:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category'>
          <field>[Category]</field>
          <field>[SubCategory]</field>
        </drill-path>
        <drill-path name='Country, Region'>
          <field>[Country]</field>
          <field>[Region]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[PostalCode]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/olive/AppData/Local/Temp/TableauTemp/#TableauTemp_1w4t8041selqjk1at3lt30luw7yn.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/23/2025 07:26:52 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>OrderDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[OrderDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OrderDate</remote-alias>
              <ordinal>0</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1390</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ProductID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ProductID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ProductID</remote-alias>
              <ordinal>1</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2108</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CustomerID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CustomerID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CustomerID</remote-alias>
              <ordinal>2</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ShipmentID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ShipmentID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ShipmentID</remote-alias>
              <ordinal>3</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3358</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OrderReference</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OrderReference]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OrderReference</remote-alias>
              <ordinal>4</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3373</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>5</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>6</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>7</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3388</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>8</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3820</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DiscountAmount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DiscountAmount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DiscountAmount</remote-alias>
              <ordinal>9</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2139</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SalesWoDiscount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SalesWoDiscount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SalesWoDiscount</remote-alias>
              <ordinal>10</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2809</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CustomerName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CustomerName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CustomerName</remote-alias>
              <ordinal>11</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>12</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ProductName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ProductName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ProductName</remote-alias>
              <ordinal>13</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2054</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SubCategory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SubCategory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SubCategory</remote-alias>
              <ordinal>15</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ShipDate</remote-name>
              <remote-type>135</remote-type>
              <local-name>[ShipDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ShipDate</remote-alias>
              <ordinal>16</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1468</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ShipMode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ShipMode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ShipMode</remote-alias>
              <ordinal>17</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PostalCode</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PostalCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PostalCode</remote-alias>
              <ordinal>18</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>625</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>19</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>510</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>20</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>21</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>22</ordinal>
              <family>Sample-Superstore_processed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.66863' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.33137' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Discount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[cum:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcdf:sum:Sales:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Profit:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_2655997913779695622:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_1375568244026716162:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Profit Margin (copy)_2655997913806389258:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568244027686919:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[attr:Calculation_1375568244026716162:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[cum:sum:Calculation_1375568244026716162:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[cum:sum:Calculation_1375568244026716162:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[cum:sum:Calculation_1375568244026716162:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[diff:cum:sum:Calculation_1375568244026716162:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[diff:sum:Calculation_1375568244026716162:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_1375568244026716162:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568244026716162:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[cum:sum:Sales:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[cum:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[diff:sum:Calculation_1375568242964336640:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[diff:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcdf:sum:Calculation_1375568242964336640:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcdf:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_2655997913779851271:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='City Filter' datatype='string' name='[City Parameter (copy)_2655997914434125864]' param-domain-type='any' role='measure' type='nominal' value='&quot;Jackson&quot;'>
          <calculation class='tableau' formula='&quot;Jackson&quot;' />
        </column>
        <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
        <column caption='Select Date' datatype='date' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2017-05-05#'>
          <calculation class='tableau' formula='#2017-05-05#' />
        </column>
        <column caption='Time Drill Down' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
          <calculation class='tableau' formula='&quot;Year&quot;' />
        </column>
        <column caption='Switch Profit, DiscountAmount' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
        </column>
        <column caption='Switch Segment' datatype='string' datatype-customized='true' name='[Parameter 5]' param-domain-type='list' role='measure' type='nominal' value='&quot;Corporate&quot;'>
          <calculation class='tableau' formula='&quot;Corporate&quot;' />
        </column>
        <column caption='Region Parameter' datatype='string' name='[Parameter 6]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
        <column caption='State Parameter' datatype='string' name='[Region Parameter (copy 2)_2655997914426990626]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
        <column caption='City Parameter' datatype='string' name='[Region Parameter (copy)_2655997914426970145]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
        <column caption='Region Filter' datatype='string' name='[Region Parameter (copy)_2655997914434125862]' param-domain-type='any' role='measure' type='nominal' value='&quot;West&quot;'>
          <calculation class='tableau' formula='&quot;West&quot;' />
        </column>
        <column caption='State Filter' datatype='string' name='[State Parameter (copy)_2655997914434125863]' param-domain-type='any' role='measure' type='nominal' value='&quot;Mississippi&quot;'>
          <calculation class='tableau' formula='&quot;Mississippi&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Sample-Superstore_processed.csv' id='Sample-Superstore_processed.csv_A8D69F136BB24DEE92E9A2E2515C8D94'>
            <properties context=''>
              <relation connection='textscan.14q38ef1q41g9v15hqzbv1rt9u5k' name='Sample-Superstore_processed.csv' table='[Sample-Superstore_processed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
                  <column datatype='datetime' name='OrderDate' ordinal='0' />
                  <column datatype='string' name='ProductID' ordinal='1' />
                  <column datatype='string' name='CustomerID' ordinal='2' />
                  <column datatype='integer' name='ShipmentID' ordinal='3' />
                  <column datatype='string' name='OrderReference' ordinal='4' />
                  <column datatype='integer' name='Quantity' ordinal='5' />
                  <column datatype='real' name='Discount' ordinal='6' />
                  <column datatype='real' name='Sales' ordinal='7' />
                  <column datatype='real' name='Profit' ordinal='8' />
                  <column datatype='real' name='DiscountAmount' ordinal='9' />
                  <column datatype='real' name='SalesWoDiscount' ordinal='10' />
                  <column datatype='string' name='CustomerName' ordinal='11' />
                  <column datatype='string' name='Segment' ordinal='12' />
                  <column datatype='string' name='ProductName' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='SubCategory' ordinal='15' />
                  <column datatype='datetime' name='ShipDate' ordinal='16' />
                  <column datatype='string' name='ShipMode' ordinal='17' />
                  <column datatype='integer' name='PostalCode' ordinal='18' />
                  <column datatype='string' name='City' ordinal='19' />
                  <column datatype='string' name='Country' ordinal='20' />
                  <column datatype='string' name='Region' ordinal='21' />
                  <column datatype='string' name='State' ordinal='22' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action7_49B770E3813646B39B030AC2293B9378]'>
      <activation type='on-select' />
      <source dashboard='Sales Dashboard' type='sheet' worksheet='Profit Discount by State' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Profit Discount by State,SPQ per Category' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sales Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Order Value'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Time Drill Down' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
              <calculation class='tableau' formula='&quot;Year&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='OrderDateDyn' datatype='date' datatype-customized='true' name='[Calculation_2655997913799688201]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(CASE [Parameters].[Parameter 3] &#13;&#10;WHEN &apos;Year&apos;     THEN DATETRUNC(&apos;year&apos;, [OrderDate])&#13;&#10;WHEN &apos;Quarter&apos;  THEN DATETRUNC(&apos;quarter&apos;, [OrderDate])&#13;&#10;WHEN &apos;Month&apos;    THEN DATETRUNC(&apos;month&apos;, [OrderDate])&#13;&#10;WHEN &apos;Week&apos;     THEN DATETRUNC(&apos;week&apos;, [OrderDate])&#13;&#10;WHEN &apos;Day&apos;      THEN DATETRUNC(&apos;day&apos;, [OrderDate])&#13;&#10;END)' />
            </column>
            <column caption='Average Order Value' datatype='real' name='[Calculation_2655997914145599512]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales]) / COUNTD([OrderReference])' />
            </column>
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[OrderReference]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2655997913799688201]' derivation='None' name='[none:Calculation_2655997913799688201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2655997914145599512]' derivation='User' name='[usr:Calculation_2655997914145599512:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997914145599512:qk]</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997913799688201:qk]</cols>
      </table>
      <simple-id uuid='{BD125D2A-79B4-4C18-9282-23708EF115CC}' />
    </worksheet>
    <worksheet name='Avg Quantity per Day in Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
          </datasources>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Orders per Day' datatype='integer' name='[Calculation_2655997914087362576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [OrderDate]: COUNTD([OrderReference])}' />
            </column>
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[OrderReference]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2655997914087362576]' derivation='Avg' name='[avg:Calculation_2655997914087362576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Avg' name='[avg:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Day' name='[dy:OrderDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Calculation_2655997914087362576:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Quantity:qk] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Calculation_2655997914087362576:qk])</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[dy:OrderDate:ok]</cols>
      </table>
      <simple-id uuid='{8FA0B57A-4378-4864-806B-D7B286A05B6D}' />
    </worksheet>
    <worksheet name='Customer Distribution per Segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Segment' datatype='string' datatype-customized='true' name='[Parameter 5]' param-domain-type='list' role='measure' type='nominal' value='&quot;Corporate&quot;'>
              <calculation class='tableau' formula='&quot;Corporate&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Customers per Segment' datatype='real' name='[Calculation_2655997914095648787]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 5]&#13;&#10;WHEN &apos;Consumer&apos;         THEN COUNTD(IF [Segment] = &apos;Consumer&apos; THEN [CustomerID] END) / COUNTD([CustomerID])&#13;&#10;WHEN &apos;Home Office&apos;      THEN COUNTD(IF [Segment] = &apos;Home Office&apos; THEN [CustomerID] END) / COUNTD([CustomerID])&#13;&#10;WHEN &apos;Corporate&apos;        THEN COUNTD(IF [Segment] = &apos;Corporate&apos; THEN [CustomerID] END) / COUNTD([CustomerID])&#13;&#10;WHEN &apos;All&apos;              THEN SUM({FIXED State: COUNTD([CustomerID])}) / SUM({FIXED [State],[Segment]: COUNTD([CustomerID])})&#13;&#10;END' />
            </column>
            <column aggregate-role-from='[Region]' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[CustomerID]' role='dimension' type='nominal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2655997914095648787]' derivation='User' name='[usr:Calculation_2655997914095648787:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997914095648787:qk]' max='0.66666666699999999' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Region:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]' />
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997914095648787:qk]' />
              <geometry column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CBFD13EB-34E0-4E18-92B0-C84A39A38876}' />
    </worksheet>
    <worksheet name='Orders vs time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
          </datasources>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[OrderReference]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='integer' name='[Orders (copy)_2655997914230960154]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([OrderReference])' />
            </column>
            <column-instance column='[Orders (copy)_2655997914230960154]' derivation='User' name='[pcdf:usr:Orders (copy)_2655997914230960154:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[OrderDate]' derivation='Month-Trunc' name='[tmn:OrderDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Orders (copy)_2655997914230960154]' derivation='User' name='[usr:Orders (copy)_2655997914230960154:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Orders (copy)_2655997914230960154:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcdf:usr:Orders (copy)_2655997914230960154:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Orders (copy)_2655997914230960154:qk] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcdf:usr:Orders (copy)_2655997914230960154:qk])</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tmn:OrderDate:qk]</cols>
      </table>
      <simple-id uuid='{F08CCE92-92D4-4EF1-A3A5-85AF203F2A5B}' />
    </worksheet>
    <worksheet name='Profit Discount Analysis per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Time Drill Down' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
              <calculation class='tableau' formula='&quot;Year&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='OrderDateDyn' datatype='date' datatype-customized='true' name='[Calculation_2655997913799688201]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(CASE [Parameters].[Parameter 3] &#13;&#10;WHEN &apos;Year&apos;     THEN DATETRUNC(&apos;year&apos;, [OrderDate])&#13;&#10;WHEN &apos;Quarter&apos;  THEN DATETRUNC(&apos;quarter&apos;, [OrderDate])&#13;&#10;WHEN &apos;Month&apos;    THEN DATETRUNC(&apos;month&apos;, [OrderDate])&#13;&#10;WHEN &apos;Week&apos;     THEN DATETRUNC(&apos;week&apos;, [OrderDate])&#13;&#10;WHEN &apos;Day&apos;      THEN DATETRUNC(&apos;day&apos;, [OrderDate])&#13;&#10;END)' />
            </column>
            <column aggregate-role-from='[Region]' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[DiscountAmount]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2655997913799688201]' derivation='None' name='[none:Calculation_2655997913799688201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='None' name='[none:OrderDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DiscountAmount]' derivation='Sum' name='[sum:DiscountAmount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Action (Country,Region,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_49B770E3813646B39B030AC2293B9378]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Region]' member='&quot;Central&quot;' />
                <groupfilter function='member' level='[State]' member='&quot;Texas&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>#2015-10-17#</min>
            <max>#2017-08-15#</max>
          </filter>
          <slices>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Action (Country,Region,State)]</column>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk] + ([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Profit:qk] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]))</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997913799688201:qk]</cols>
      </table>
      <simple-id uuid='{B893E37C-98AA-4FE3-AC06-10B7FD3A5655}' />
    </worksheet>
    <worksheet name='Profit Discount by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Profit, DiscountAmount' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Profit, DiscountAmount' datatype='real' name='[Calculation_2655997913806688267]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 4]&#13;&#10;WHEN &apos;Profit&apos; THEN SUM([Profit])&#13;&#10;WHEN &apos;DiscountAmount&apos; THEN SUM([DiscountAmount])&#13;&#10;WHEN &apos;Profit vs DiscountAmount&apos; THEN [Profit Margin (copy)_2655997913806389258]&#13;&#10;END' />
            </column>
            <column aggregate-role-from='[Region]' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[DiscountAmount]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='DiscountAmount vs Profit' datatype='real' name='[Profit Margin (copy)_2655997913806389258]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([DiscountAmount]) / sum([Profit])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[OrderDate]' derivation='None' name='[none:OrderDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2655997913806688267]' derivation='User' name='[usr:Calculation_2655997913806688267:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>#2015-10-17#</min>
            <max>#2017-08-15#</max>
          </filter>
          <slices>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Region:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]' />
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]' />
              <geometry column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D9BD0B99-139E-4EC8-B289-B1F4C52CC576}' />
    </worksheet>
    <worksheet name='Profit Margin'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Time Drill Down' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
              <calculation class='tableau' formula='&quot;Year&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_1375568244026716162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit]) / sum([Sales])' />
            </column>
            <column caption='OrderDateDyn' datatype='date' datatype-customized='true' name='[Calculation_2655997913799688201]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(CASE [Parameters].[Parameter 3] &#13;&#10;WHEN &apos;Year&apos;     THEN DATETRUNC(&apos;year&apos;, [OrderDate])&#13;&#10;WHEN &apos;Quarter&apos;  THEN DATETRUNC(&apos;quarter&apos;, [OrderDate])&#13;&#10;WHEN &apos;Month&apos;    THEN DATETRUNC(&apos;month&apos;, [OrderDate])&#13;&#10;WHEN &apos;Week&apos;     THEN DATETRUNC(&apos;week&apos;, [OrderDate])&#13;&#10;WHEN &apos;Day&apos;      THEN DATETRUNC(&apos;day&apos;, [OrderDate])&#13;&#10;END)' />
            </column>
            <column datatype='real' name='[DiscountAmount]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2655997913799688201]' derivation='None' name='[none:Calculation_2655997913799688201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[DiscountAmount]' derivation='Sum' name='[sum:DiscountAmount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1375568244026716162]' derivation='User' name='[usr:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_1375568244026716162:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk] + ([federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_1375568244026716162:qk] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]))</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997913799688201:qk]</cols>
      </table>
      <simple-id uuid='{84CA8E0D-5FA5-4A6B-8E0F-37BE3DB57ED7}' />
    </worksheet>
    <worksheet name='Profit Margin per Segment vs time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
          </datasources>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_1375568244026716162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit]) / sum([Sales])' />
            </column>
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Quarter-Trunc' name='[tqr:OrderDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1375568244026716162]' derivation='User' name='[usr:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_1375568244026716162:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Sales:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Profit:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk] + ([federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Sales:qk:2] + ([federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Profit:qk:2] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_1375568244026716162:qk])))</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tqr:OrderDate:qk]</cols>
      </table>
      <simple-id uuid='{9818D6BA-0A49-457E-B192-5E76CA9FF3BA}' />
    </worksheet>
    <worksheet name='Profit Rate per Category vs Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
          </datasources>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_1375568244026716162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit]) / sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[DiscountAmount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[DiscountAmount]' derivation='Sum' name='[sum:DiscountAmount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Quarter-Trunc' name='[tqr:OrderDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1375568244026716162]' derivation='User' name='[usr:Calculation_1375568244026716162:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_1375568244026716162:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk] + ([federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_1375568244026716162:qk] + ([federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Discount:qk] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk])))</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tqr:OrderDate:qk]</cols>
      </table>
      <simple-id uuid='{115EC1C9-6DA6-437A-8677-39CEE9B3108E}' />
    </worksheet>
    <worksheet name='Profit Sales per Segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
          </datasources>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Profit:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Multiple Values]</rows>
        <cols>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk] / [federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{98451C10-2502-40A9-9B47-B4AC4CDAF414}' />
    </worksheet>
    <worksheet name='Profit vs Category vs Segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Profit, DiscountAmount' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Profit, DiscountAmount' datatype='real' name='[Calculation_2655997913806688267]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 4]&#13;&#10;WHEN &apos;Profit&apos; THEN SUM([Profit])&#13;&#10;WHEN &apos;DiscountAmount&apos; THEN SUM([DiscountAmount])&#13;&#10;WHEN &apos;Profit vs DiscountAmount&apos; THEN [Profit Margin (copy)_2655997913806389258]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[DiscountAmount]' role='measure' type='quantitative' />
            <column caption='DiscountAmount vs Profit' datatype='real' name='[Profit Margin (copy)_2655997913806389258]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([DiscountAmount]) / sum([Profit])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[SubCategory]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[SubCategory]' derivation='None' name='[none:SubCategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2655997913806688267]' derivation='User' name='[usr:Calculation_2655997913806688267:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk] * [federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk])</rows>
        <cols>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk] / [federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:SubCategory:nk])</cols>
      </table>
      <simple-id uuid='{13D07C62-D9FB-406B-A5F8-23D3845BA391}' />
    </worksheet>
    <worksheet name='Purchase Frequency'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
          </datasources>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Purchase Frequency 1' datatype='real' name='[Calculation_2655997914229612569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Orders (copy)_2655997914230960154] / COUNTD([CustomerID])' />
            </column>
            <column caption='Orders per Customer' datatype='integer' name='[Calculation_2655997914244976672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [CustomerID]: COUNTD([OrderReference])}' />
            </column>
            <column datatype='string' name='[CustomerID]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[OrderReference]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='integer' name='[Orders (copy)_2655997914230960154]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([OrderReference])' />
            </column>
            <column-instance column='[Calculation_2655997914244976672]' derivation='Avg' name='[avg:Calculation_2655997914244976672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Month-Trunc' name='[tmn:OrderDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2655997914229612569]' derivation='User' name='[usr:Calculation_2655997914229612569:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997914229612569:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Calculation_2655997914244976672:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997914229612569:qk] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Calculation_2655997914244976672:qk])</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tmn:OrderDate:qk]</cols>
      </table>
      <simple-id uuid='{6326F05F-F7D4-48A9-9C35-C864F568F669}' />
    </worksheet>
    <worksheet name='SPQ YTD'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
            <column caption='Select Date' datatype='date' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2017-05-05#'>
              <calculation class='tableau' formula='#2017-05-05#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Sales, Profit, Quantity' datatype='real' name='[Calculation_1375568242964336640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] &#13;&#10;WHEN &quot;Sales&quot; THEN [Sales] &#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]  &#13;&#10;END' />
            </column>
            <column caption='Sales - CY YTD' datatype='real' name='[Calculation_2655997913779695622]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([OrderDate]) = YEAR([Parameters].[Parameter 2]) AND [OrderDate] &lt;= [Parameters].[Parameter 2]&#13;&#10;THEN [Calculation_1375568242964336640]&#13;&#10;END' />
            </column>
            <column caption='Sales - PY YTD' datatype='real' name='[Calculation_2655997913779851271]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([OrderDate]) = YEAR([Parameters].[Parameter 2])-1 AND [OrderDate] &lt;= DATEADD(&apos;year&apos;, -1, [Parameters].[Parameter 2])&#13;&#10;THEN [Calculation_1375568242964336640]&#13;&#10;END' />
            </column>
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2655997913779695622]' derivation='Sum' name='[sum:Calculation_2655997913779695622:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2655997913779851271]' derivation='Sum' name='[sum:Calculation_2655997913779851271:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_2655997913779851271:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_2655997913779695622:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_2655997913779851271:qk]&quot;</bucket>
              <bucket>&quot;[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_2655997913779695622:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Multiple Values]</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{DC97C145-158F-49CA-A33D-C0BD5046DB94}' />
    </worksheet>
    <worksheet name='SPQ YTD Num'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Comic Sans MS'>YoY %  Change to Current Date</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
            <column caption='Select Date' datatype='date' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2017-05-05#'>
              <calculation class='tableau' formula='#2017-05-05#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Sales, Profit, Quantity' datatype='real' name='[Calculation_1375568242964336640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] &#13;&#10;WHEN &quot;Sales&quot; THEN [Sales] &#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]  &#13;&#10;END' />
            </column>
            <column caption='Sales - CY YTD' datatype='real' name='[Calculation_2655997913779695622]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([OrderDate]) = YEAR([Parameters].[Parameter 2]) AND [OrderDate] &lt;= [Parameters].[Parameter 2]&#13;&#10;THEN [Calculation_1375568242964336640]&#13;&#10;END' />
            </column>
            <column caption='Sales - PY YTD' datatype='real' name='[Calculation_2655997913779851271]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([OrderDate]) = YEAR([Parameters].[Parameter 2])-1 AND [OrderDate] &lt;= DATEADD(&apos;year&apos;, -1, [Parameters].[Parameter 2])&#13;&#10;THEN [Calculation_1375568242964336640]&#13;&#10;END' />
            </column>
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column caption='Sales - YoY YTD % Change' datatype='real' default-format='p0%' name='[Sales - YoY % Change (copy)_2655997913782439944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_2655997913779695622]) - SUM([Calculation_2655997913779851271])) / SUM([Calculation_2655997913779851271])' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales - YoY % Change (copy)_2655997913782439944]' derivation='User' name='[usr:Sales - YoY % Change (copy)_2655997913782439944:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' data-class='subtotal' value='Comic Sans MS' />
            <format attr='font-size' data-class='subtotal' value='20' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='width' value='175' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Sales - YoY % Change (copy)_2655997913782439944:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Sales - YoY % Change (copy)_2655997913782439944:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='3.966850757598877' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F420DDC7-20D7-4068-860D-A070787BC5CB}' />
    </worksheet>
    <worksheet name='SPQ by City'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
            <column caption='Region Filter' datatype='string' name='[Region Parameter (copy)_2655997914434125862]' param-domain-type='any' role='measure' type='nominal' value='&quot;West&quot;'>
              <calculation class='tableau' formula='&quot;West&quot;' />
            </column>
            <column caption='State Filter' datatype='string' name='[State Parameter (copy)_2655997914434125863]' param-domain-type='any' role='measure' type='nominal' value='&quot;Mississippi&quot;'>
              <calculation class='tableau' formula='&quot;Mississippi&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Sales, Profit, Quantity' datatype='real' name='[Calculation_1375568242964336640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] &#13;&#10;WHEN &quot;Sales&quot; THEN [Sales] &#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]  &#13;&#10;END' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_2655997914434486313]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Region] = [Parameters].[Region Parameter (copy)_2655997914434125862]' />
            </column>
            <column caption='State Filter' datatype='boolean' name='[Calculation_2655997914436431914]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[State] = [Parameters].[State Parameter (copy)_2655997914434125863]' />
            </column>
            <column aggregate-role-from='[PostalCode]' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2655997914434486313]' derivation='None' name='[none:Calculation_2655997914434486313:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2655997914436431914]' derivation='None' name='[none:Calculation_2655997914436431914:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[sum:Calculation_1375568242964336640:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914434486313:nk]'>
            <groupfilter function='member' level='[none:Calculation_2655997914434486313:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914436431914:nk]'>
            <groupfilter function='member' level='[none:Calculation_2655997914436431914:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914434486313:nk]</column>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914436431914:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]' field-type='quantitative' max='-8041644.3808305953' min='-11528202.047409946' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]' field-type='quantitative' max='4684974.975403144' min='3769151.0698060906' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-orange-blue-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Region:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:City:nk]' />
              <geometry column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{375B477A-11F8-45AA-B60C-949E87EB6261}' />
    </worksheet>
    <worksheet name='SPQ by PostalCode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column aggregate-role-from='[PostalCode]' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column aggregate-role-from='[Region]' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[PostalCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostalCode]' derivation='None' name='[none:PostalCode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Region:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:City:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:PostalCode:ok]' />
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]' />
              <geometry column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{373B3CAE-3CD6-4421-8D9D-B8F6E5861A1A}' />
    </worksheet>
    <worksheet name='SPQ by Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Sales, Profit, Quantity' datatype='real' name='[Calculation_1375568242964336640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] &#13;&#10;WHEN &quot;Sales&quot; THEN [Sales] &#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]  &#13;&#10;END' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[sum:Calculation_1375568242964336640:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]' field-type='quantitative' max='-3339572.7431364842' min='-17611946.521710861' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]' field-type='quantitative' max='9738162.5520530846' min='657185.8162596873' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Region:nk]' />
              <geometry column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BB76E54E-0097-41B8-80A6-3325D1193C71}' />
    </worksheet>
    <worksheet name='SPQ by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
            <column caption='Region Filter' datatype='string' name='[Region Parameter (copy)_2655997914434125862]' param-domain-type='any' role='measure' type='nominal' value='&quot;West&quot;'>
              <calculation class='tableau' formula='&quot;West&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Sales, Profit, Quantity' datatype='real' name='[Calculation_1375568242964336640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] &#13;&#10;WHEN &quot;Sales&quot; THEN [Sales] &#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]  &#13;&#10;END' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_2655997914434486313]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Region] = [Parameters].[Region Parameter (copy)_2655997914434125862]' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2655997914434486313]' derivation='None' name='[none:Calculation_2655997914434486313:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[sum:Calculation_1375568242964336640:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914434486313:nk]'>
            <groupfilter function='member' level='[none:Calculation_2655997914434486313:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914434486313:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]' field-type='quantitative' max='-8696662.5210068226' min='-18040171.123659991' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]' field-type='quantitative' max='6645046.8442069683' min='1058791.078141259' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-orange-blue-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Region:nk]' />
              <lod column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]' />
              <geometry column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2B1307E4-6179-4576-8CD9-4B05CF2802F5}' />
    </worksheet>
    <worksheet name='SPQ per Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; per Category&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Sales, Profit, Quantity' datatype='real' name='[Calculation_1375568242964336640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] &#13;&#10;WHEN &quot;Sales&quot; THEN [Sales] &#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]  &#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[DiscountAmount]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[pcto:sum:Calculation_1375568242964336640:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Category]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[sum:Calculation_1375568242964336640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DiscountAmount]' derivation='Sum' name='[sum:DiscountAmount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Year' name='[yr:OrderDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' scope='rows' value='Sales' />
            <format attr='title' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Calculation_1375568242964336640:qk:4]' scope='rows' value='Sales' />
            <format attr='auto-subtitle' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Calculation_1375568242964336640:qk:4]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Calculation_1375568242964336640:qk:4]' scope='rows' value='Fraction Category' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Calculation_1375568242964336640:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6041989326477051' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6041989326477051' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6041989326477051' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk] + ([federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Calculation_1375568242964336640:qk:4] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]))</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</cols>
      </table>
      <simple-id uuid='{D5B64AF2-39C6-4B0D-B2F9-69FA4662F030}' />
    </worksheet>
    <worksheet name='SPQ per Category (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales and Profits per Product Category
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Sales, Profit, Quantity' datatype='real' name='[Calculation_1375568242964336640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] &#13;&#10;WHEN &quot;Sales&quot; THEN [Sales] &#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]  &#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[DiscountAmount]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[OrderDate]' derivation='None' name='[none:OrderDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[sum:Calculation_1375568242964336640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DiscountAmount]' derivation='Sum' name='[sum:DiscountAmount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Month-Trunc' name='[tmn:OrderDate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]' included-values='in-range'>
            <min>#2016-09-25#</min>
            <max>#2017-12-30#</max>
          </filter>
          <slices>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' scope='rows' value='Sales' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6041989326477051' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6041989326477051' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk] + ([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:DiscountAmount:qk]))</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tmn:OrderDate:qk]</cols>
      </table>
      <simple-id uuid='{84F51133-2ACF-430D-9B24-B8EB7A7E8DE2}' />
    </worksheet>
    <worksheet name='SPQ per Item vs Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Sales, Profit, Quantity' datatype='real' name='[Calculation_1375568242964336640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] &#13;&#10;WHEN &quot;Sales&quot; THEN [Sales] &#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]  &#13;&#10;END' />
            </column>
            <column caption='SPQ per Item' datatype='real' name='[Calculation_1375568244024266753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1375568242964336640])/SUM([Quantity])' />
            </column>
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1375568242964336640]' derivation='Sum' name='[sum:Calculation_1375568242964336640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Month-Trunc' name='[tmn:OrderDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1375568244024266753]' derivation='User' name='[usr:Calculation_1375568244024266753:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_1375568244024266753:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_1375568244024266753:qk])</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tmn:OrderDate:qk]</cols>
      </table>
      <simple-id uuid='{3311E6EE-1E3E-4397-B8D4-EE001112C2A0}' />
    </worksheet>
    <worksheet name='Sales vs Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
          </datasources>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk:5]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Year' name='[yr:OrderDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcdf:sum:Sales:qk:5]' included-values='non-null' />
          <slices>
            <column>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcdf:sum:Sales:qk:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcdf:sum:Sales:qk:5]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>([federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk] + [federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcdf:sum:Sales:qk:5])</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</cols>
      </table>
      <simple-id uuid='{2517EC54-BF4A-4E98-9D16-D1C57517630B}' />
    </worksheet>
    <worksheet name='Sheet 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
          </datasources>
          <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
            <column caption='Orders per Customer' datatype='integer' name='[Calculation_2655997914244976672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [CustomerID]: COUNTD([OrderReference])}' />
            </column>
            <column datatype='string' name='[CustomerID]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[OrderReference]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2655997914244976672]' derivation='Avg' name='[avg:Calculation_2655997914244976672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Quarter-Trunc' name='[tqr:OrderDate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[avg:Calculation_2655997914244976672:qk]</rows>
        <cols>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tqr:OrderDate:qk]</cols>
      </table>
      <simple-id uuid='{8E9E17A2-3FE9-4E8E-BDDE-065E8BD94AB0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Exec Dashboard'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
            <member value='&quot;Quantity&quot;' />
          </members>
        </column>
        <column caption='Select Date' datatype='date' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2017-05-05#'>
          <calculation class='tableau' formula='#2017-05-05#' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48163' id='3' param='vert' type-v2='layout-flow' w='48769' x='1231' y='16355'>
            <zone h='27730' id='7' name='SPQ YTD' w='48769' x='1231' y='16355'>
              <layout-cache minheight='183' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='162' h='20433' id='13' is-fixed='true' name='SPQ YTD Num' w='48769' x='1231' y='44085'>
              <layout-cache fixed-size-w='80' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='34520' id='10' param='vert' type-v2='layout-flow' w='97538' x='1231' y='64518'>
            <zone h='34520' id='11' type-v2='empty' w='97538' x='1231' y='64518'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='15393' id='14' param='vert' type-v2='layout-flow' w='97538' x='1231' y='962'>
            <zone h='6250' id='8' mode='datetime' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='97538' x='1231' y='962'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6250' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='97538' x='1231' y='7212'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='48163' id='15' param='vert' type-v2='layout-flow' w='48769' x='50000' y='16355'>
            <zone h='48163' id='16' type-v2='empty' w='48769' x='50000' y='16355'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98076' id='31' param='vert' type-v2='layout-flow' w='97538' x='1231' y='962'>
                <zone h='6250' id='8' mode='datetime' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='97538' x='1231' y='962'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6250' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='97538' x='1231' y='7212'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='230' h='27730' id='7' is-fixed='true' name='SPQ YTD' w='48769' x='1231' y='16355'>
                  <layout-cache minheight='183' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='168' h='20433' id='13' is-fixed='true' name='SPQ YTD Num' w='48769' x='1231' y='44085'>
                  <layout-cache fixed-size-w='80' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B68E60F9-D8E5-4EEF-8E42-4EB1BA361612}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Sales Dashboard'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sample-Superstore_processed' name='federated.1g0bsj40ur9ze01drk95z11a2y3v' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Switch Sales, Profit, Quantity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
            <member value='&quot;Quantity&quot;' />
          </members>
        </column>
        <column caption='Time Drill Down' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year&quot;'>
          <calculation class='tableau' formula='&quot;Year&quot;' />
          <members>
            <member value='&quot;Year&quot;' />
            <member value='&quot;Quarter&quot;' />
            <member value='&quot;Month&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Day&quot;' />
          </members>
        </column>
        <column caption='Switch Profit, DiscountAmount' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
          <members>
            <member value='&quot;Profit&quot;' />
            <member value='&quot;DiscountAmount&quot;' />
            <member value='&quot;Profit vs DiscountAmount&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1g0bsj40ur9ze01drk95z11a2y3v'>
        <column datatype='date' datatype-customized='true' name='[OrderDate]' role='dimension' type='ordinal' />
        <column-instance column='[OrderDate]' derivation='None' name='[none:OrderDate:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='11' param='vert' type-v2='layout-flow' w='54733' x='35139' y='1042'>
            <zone fixed-size='368' h='48959' id='24' is-fixed='true' name='Profit Discount by State' w='54733' x='35139' y='1042'>
              <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='48957' id='15' name='Profit Discount Analysis per State' w='54733' x='35139' y='50001'>
              <layout-cache minheight='399' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='53515' id='14' param='vert' type-v2='layout-flow' w='9542' x='89872' y='1042'>
            <zone h='8464' id='25' name='Profit Discount by State' pane-specification-id='0' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]' type-v2='color' w='9542' x='89872' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6771' id='26' mode='compact' param='[Parameters].[Parameter 4]' type-v2='paramctrl' w='9542' x='89872' y='9506'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='24479' id='27' param='vert' type-v2='layout-flow' w='9542' x='89872' y='74479' />
          <zone h='8594' id='19' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='9542' x='89872' y='54557'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='85053' id='34' param='vert' type-v2='layout-flow' w='28331' x='586' y='13905'>
            <zone h='85053' id='36' name='SPQ per Category' w='28331' x='586' y='13905'>
              <layout-cache minheight='385' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='12863' id='35' param='horz' type-v2='layout-flow' w='28331' x='586' y='1042'>
            <zone h='12863' id='37' name='SPQ per Category' pane-specification-id='3' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' type-v2='color' w='12299' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='12863' id='38' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16032' x='12885' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='97916' id='40' type-v2='empty' w='6222' x='28917' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='11328' id='39' name='Profit Discount by State' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]' type-v2='filter' values='database' w='9542' x='89872' y='63151'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='45' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='12863' id='38' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16032' x='12885' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11328' id='39' name='Profit Discount by State' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]' type-v2='filter' values='database' w='9542' x='89872' y='63151'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48959' id='24' is-fixed='true' name='Profit Discount by State' w='54733' x='35139' y='1042'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8464' id='25' name='Profit Discount by State' pane-specification-id='0' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]' type-v2='color' w='9542' x='89872' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='26' mode='compact' param='[Parameters].[Parameter 4]' type-v2='paramctrl' w='9542' x='89872' y='9506'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='85053' id='36' is-fixed='true' name='SPQ per Category' w='28331' x='586' y='13905'>
                  <layout-cache minheight='385' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12863' id='37' name='SPQ per Category' pane-specification-id='3' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' type-v2='color' w='12299' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48957' id='15' is-fixed='true' name='Profit Discount Analysis per State' w='54733' x='35139' y='50001'>
                  <layout-cache minheight='399' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8594' id='19' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='9542' x='89872' y='54557'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4A1F9938-5595-49C6-B6D6-716DC50FC5F9}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='State of the Company'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='3' name='Sales vs Time' w='98828' x='586' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='15' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='97916' id='3' is-fixed='true' name='Sales vs Time' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{666E5CAD-635B-4D5E-A15F-C95D4640D2D3}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='dashboard' name='Exec Dashboard'>
      <viewpoints>
        <viewpoint name='SPQ YTD'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SPQ YTD Num' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FAC37DDA-2114-4601-B594-640E64DA17B2}' />
    </window>
    <window class='dashboard' name='State of the Company'>
      <viewpoints>
        <viewpoint name='Sales vs Time'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{4165E906-81AB-4BA2-AE6A-8BF73FA37433}' />
    </window>
    <window class='dashboard' maximized='true' name='Sales Dashboard'>
      <viewpoints>
        <viewpoint name='Profit Discount Analysis per State'>
          <zoom type='entire-view' />
          <highlight field='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit Discount by State'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]</field>
                    <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Region:nk]</field>
                    <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]</field>
                    <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Geometry (generated)]</field>
                    <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Latitude (generated)]</field>
                    <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[Longitude (generated)]</field>
                    <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Central&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;MULTIPOLYGON(((-97.1463 25.9556,-97.208 25.9636,-97.2772 25.9354,-97.3489 25.9308,-97.3744 25.9074,-97.3576 25.8869,-97.3737 25.84,-97.4539 25.8544,-97.4564 25.8838,-97.5218 25.8865,-97.5482 25.9355,-97.5826 25.9379,-97.6449 26.0275,-97.7067 26.0374,-97.7641 26.0286,-97.8013 26.06,-97.8355 26.0469,-97.8619 26.0698,-97.9099 26.0569,-97.9661 26.0519,-98.0308 26.065,-98.0701 26.0379,-98.0791 26.0705,-98.1355 26.072,-98.1575 26.0544,-98.197 26.0562,-98.3065 26.1043,-98.3352 26.1376,-98.3867 26.1579,-98.4443 26.2012,-98.4452 26.2246,-98.5061 26.209,-98.5224 26.2209,-98.5615 26.2245,-98.5867 26.2575,-98.6542 26.236,-98.6794 26.2492,-98.7538 26.3317,-98.7898 26.3316,-98.8269 26.3696,-98.8962 26.3532,-98.9292 26.3932,-98.9465 26.3699,-98.9742 26.4011,-99.0106 26.3921,-99.04 26.4129,-99.0948 26.4109,-99.1109 26.4263,-99.0916 26.4764,-99.1284 26.5255,-99.1667 26.5361,-99.1694 26.5717,-99.2002 26.6558,-99.2089 26.7248,-99.24 26.7459,-99.2424 26.7883,-99.2686 26.8432,-99.3289 26.8802,-99.3218 26.9068,-99.3883 26.9442,-99.3773 26.9738,-99.4155 27.0172,-99.4465 27.023,-99.451 27.0668,-99.4303 27.0949,-99.4396 27.1521,-99.4264 27.1783,-99.4538 27.2651,-99.4966 27.2717,-99.495 27.3039,-99.5379 27.3175,-99.5044 27.3399,-99.4804 27.4816,-99.5283 27.4989,-99.5111 27.5645,-99.5568 27.6143,-99.58 27.6023,-99.594 27.6386,-99.6389 27.6268,-99.6913 27.6687,-99.7284 27.6793,-99.7707 27.7321,-99.8331 27.7629,-99.8723 27.7953,-99.8813 27.8496,-99.9015 27.8642,-99.9001 27.9121,-99.9371 27.9405,-99.9318 27.981,-99.9898 27.9929,-100.019 28.0664,-100.0561 28.0913,-100.0869 28.1468,-100.1592 28.1676,-100.2122 28.1968,-100.2236 28.2352,-100.2578 28.2403,-100.2935 28.2785,-100.2886 28.317,-100.3493 28.4014,-100.3362 28.4302,-100.3682 28.4789,-100.3347 28.5003,-100.387 28.514,-100.4104 28.5543,-100.3985 28.5852,-100.4476 28.6101,-100.4457 28.6406,-100.5004 28.662,-100.5076 28.7406,-100.5336 28.7611,-100.5466 28.8249,-100.5705 28.8263,-100.5915 28.8893,-100.6488 28.941,-100.6459 28.9864,-100.6675 29.0843,-100.7759 29.1733,-100.7659 29.1875,-100.7948 29.2416,-100.8761 29.2796,-100.8868 29.3078,-100.9507 29.3477,-101.0066 29.366,-101.0602 29.4587,-101.1519 29.477,-101.1738 29.5146,-101.2612 29.5368,-101.241 29.565,-101.2622 29.6306,-101.291 29.5715,-101.3116 29.5851,-101.3 29.6407,-101.3141 29.6591,-101.3632 29.6526,-101.3754 29.7018,-101.4156 29.7465,-101.4489 29.7507,-101.4558 29.788,-101.5392 29.7618,-101.5419 29.8108,-101.5758 29.7693,-101.7106 29.7617,-101.7609 29.7821,-101.8062 29.7808,-101.8534 29.8079,-101.9335 29.7851,-102.0383 29.8031,-102.049 29.7856,-102.1161 29.7925,-102.1949 29.8371,-102.3207 29.8789,-102.3648 29.8443,-102.3897 29.7819,-102.5174 29.7838,-102.548 29.745,-102.5724 29.7561,-102.623 29.7364,-102.6749 29.7443,-102.6934 29.6772,-102.7422 29.6307,-102.745 29.5932,-102.7683 29.5947,-102.7714 29.5489,-102.8084 29.5229,-102.831 29.4443,-102.8247 29.3973,-102.8399 29.3606,-102.8786 29.3539,-102.9032 29.254,-102.8706 29.2369,-102.8901 29.2088,-102.9502 29.1736,-102.9738 29.1855,-103.0325 29.1047,-103.0753 29.0923,-103.1007 29.0602,-103.1153 28.9853,-103.1533 28.9718,-103.2274 28.9915,-103.2792 28.9777,-103.2986 29.0068,-103.4337 29.045,-103.4506 29.0728,-103.5545 29.1585,-103.7192 29.1814,-103.7927 29.2623,-103.8147 29.2738,-103.9696 29.2978,-104.0199 29.3121,-104.1065 29.3731,-104.163 29.3919,-104.2175 29.4559,-104.209 29.481,-104.2642 29.514,-104.3381 29.52,-104.4006 29.573,-104.4669 29.6096,-104.5442 29.6816,-104.5661 29.7714,-104.6295 29.8523,-104.6825 29.9348,-104.674 29.9567,-104.7063 30.0497,-104.6879 30.0739,-104.6966 30.1344,-104.6872 30.179,-104.7068 30.2354,-104.7632 30.2744,-104.7735 30.3027,-104.8226 30.3503,-104.8163 30.3743,-104.8595 30.3911,-104.8694 30.4773,-104.8824 30.5323,-104.919 30.5977,-104.9721 30.6103,-105.0065 30.6858,-105.0625 30.6866,-105.1181 30.7495,-105.1617 30.7521,-105.2177 30.806,-105.2561 30.7945,-105.2917 30.8261,-105.3615 30.8503,-105.3956 30.849,-105.4135 30.8998,-105.4988 30.9503,-105.5786 31.0206,-105.5851 31.0569,-105.6467 31.1139,-105.7739 31.168,-105.8188 31.2307,-105.8747 31.2913,-105.9312 31.3127,-105.9539 31.3647,-106.0162 31.3935,-106.0753 31.3976,-106.1911 31.4599,-106.2196 31.4816,-106.2452 31.5391,-106.2801 31.5615,-106.3079 31.6295,-106.3811 31.7321,-106.4514 31.7644,-106.4905 31.7489,-106.5282 31.7831,-106.5471 31.8073,-106.6053 31.8277,-106.6455 31.8987,-106.6118 31.92,-106.6185 32.0005,-105.998 32.0023,-105.2505 32.0003,-104.8478 32.0005,-104.0245 32,-103.0644 32.0005,-103.0647 32.9591,-103.0567 33.3884,-103.044 33.9746,-103.0424 35.1831,-103.0408 36.0552,-103.0419 36.5004,-103.0024 36.5004,-102.0323 36.5006,-101.6239 36.4995,-101.0852 36.4992,-100.0004 36.4997,-100.0004 34.7465,-99.9975 34.5606,-99.9232 34.5746,-99.8446 34.5069,-99.7534 34.4209,-99.6945 34.3782,-99.6 34.3747,-99.5798 34.4169,-99.5176 34.4145,-99.4335 34.3702,-99.3987 34.3758,-99.3952 34.442,-99.3756 34.4588,-99.3201 34.4093,-99.2613 34.4035,-99.2108 34.3368,-99.1898 34.2144,-99.0953 34.2118,-99.0434 34.1982,-98.9917 34.2214,-98.9524 34.2125,-98.8601 34.1499,-98.8311 34.1622,-98.7667 34.1368,-98.6901 34.1332,-98.6481 34.1644,-98.6102 34.1571,-98.5602 34.1332,-98.487 34.0629,-98.4235 34.0828,-98.3984 34.1285,-98.364 34.1571,-98.3002 34.1346,-98.2325 34.1346,-98.1688 34.1143,-98.1391 34.1419,-98.1019 34.1468,-98.0905 34.1225,-98.1202 34.0721,-98.0838 34.0417,-98.0844 34.0029,-98.0163 33.9941,-97.9742 34.0067,-97.9468 33.9909,-97.9712 33.9372,-97.9572 33.9145,-97.9779 33.8899,-97.8714 33.849,-97.8343 33.8577,-97.763 33.9341,-97.7323 33.9367,-97.6877 33.9872,-97.6615 33.9908,-97.5888 33.9519,-97.5893 33.9039,-97.5609 33.8996,-97.4842 33.9154,-97.4511 33.8917,-97.4629 33.8429,-97.4439 33.8237,-97.3729 33.8195,-97.3319 33.8845,-97.2556 33.8637,-97.2462 33.9003,-97.2103 33.9159,-97.1855 33.9007,-97.1668 33.8404,-97.1974 33.8298,-97.1934 33.7606,-97.1513 33.7226,-97.1111 33.7194,-97.0887 33.7387,-97.088 33.8087,-97.048 33.8179,-97.0873 33.8398,-97.0573 33.8569,-97.0235 33.8445,-96.9856 33.8865,-96.9963 33.9427,-96.9348 33.9545,-96.8994 33.9337,-96.883 33.868,-96.8506 33.8472,-96.8322 33.8748,-96.7796 33.8579,-96.7694 33.8275,-96.7137 33.8313,-96.6907 33.85,-96.6734 33.9123,-96.5885 33.895,-96.629 33.8524,-96.5732 33.8192,-96.5329 33.823,-96.5007 33.7726,-96.4226 33.776,-96.3795 33.7258,-96.3622 33.6918,-96.3184 33.6971,-96.303 33.7509,-96.2773 33.7697,-96.2304 33.7485,-96.1781 33.7605,-96.1492 33.8371,-96.1015 33.8467,-96.0488 33.8365,-95.9419 33.861,-95.9321 33.8865,-95.8433 33.8383,-95.8045 33.8622,-95.7679 33.8468,-95.7566 33.892,-95.6949 33.8868,-95.6686 33.907,-95.6273 33.9078,-95.5975 33.9423,-95.5577 33.9304,-95.5434 33.8805,-95.4598 33.888,-95.4382 33.8671,-95.3105 33.8772,-95.2822 33.8759,-95.2714 33.9126,-95.2194 33.9616,-95.1559 33.9368,-95.1296 33.9367,-95.1176 33.9046,-95.0824 33.8799,-95.0601 33.9019,-95.049 33.8641,-94.9689 33.8609,-94.9535 33.8165,-94.9233 33.8087,-94.9115 33.7784,-94.8493 33.7396,-94.8234 33.7692,-94.8023 33.7328,-94.7713 33.7607,-94.7461 33.703,-94.6848 33.6844,-94.6679 33.6946,-94.6392 33.6637,-94.6214 33.6826,-94.5908 33.6456,-94.5464 33.66,-94.5204 33.6175,-94.4859 33.6379,-94.3895 33.5467,-94.3536 33.544,-94.3455 33.5673,-94.3096 33.5517,-94.2759 33.558,-94.2192 33.5561,-94.1843 33.5946,-94.1474 33.5652,-94.0824 33.5757,-94.0434 33.5523,-94.043 33.0192,-94.0427 31.9993,-94.0156 31.9799,-93.9708 31.92,-93.9299 31.9127,-93.8967 31.8853,-93.8748 31.8223,-93.8226 31.7736,-93.8369 31.7502,-93.7945 31.7021,-93.8217 31.674,-93.8187 31.6146,-93.8349 31.5862,-93.785 31.526,-93.7125 31.5134,-93.7495 31.4687,-93.6926 31.4372,-93.7049 31.4109,-93.6741 31.3977,-93.6691 31.3654,-93.6875 31.3108,-93.5984 31.2311,-93.6003 31.1762,-93.5526 31.1856,-93.5394 31.1152,-93.5632 31.097,-93.5276 31.0745,-93.5089 31.0293,-93.5563 31.0041,-93.5684 30.9691,-93.5321 30.9579,-93.5263 30.9297,-93.5586 30.9132,-93.5536 30.8351,-93.6148 30.756,-93.6077 30.7156,-93.6315 30.678,-93.6831 30.6408,-93.6788 30.5986,-93.7275 30.5747,-93.7338 30.5317,-93.6978 30.4438,-93.7417 30.4023,-93.7623 30.3537,-93.7421 30.301,-93.7047 30.2899,-93.707 30.2437,-93.721 30.2104,-93.6928 30.1352,-93.7328 30.0829,-93.7225 30.0509,-93.7551 30.0153,-93.8717 29.981,-93.8692 29.938,-93.9506 29.8493,-93.9466 29.7801,-93.8377 29.679,-94.0143 29.6798,-94.3543 29.561,-94.4991 29.5068,-94.4702 29.5571,-94.5459 29.5725,-94.7625 29.5241,-94.7039 29.6325,-94.6957 29.7565,-94.7389 29.7906,-94.8141 29.759,-94.8728 29.6714,-94.9303 29.6737,-95.0166 29.7205,-95.0726 29.8262,-95.0955 29.7576,-94.9833 29.6823,-94.9985 29.6164,-95.0789 29.5353,-95.017 29.548,-94.9096 29.4961,-94.9504 29.4667,-94.8854 29.3897,-95.0574 29.2013,-95.1496 29.1805,-95.2342 28.9926,-95.3856 28.8646,-95.5072 28.8254,-95.6537 28.7499,-95.6727 28.7495,-95.784 28.6794,-95.9149 28.6388,-95.6776 28.7494,-95.7853 28.7471,-95.9236 28.7015,-95.9608 28.6152,-96.3355 28.4381,-96.1463 28.5427,-95.9906 28.6016,-96.0388 28.6528,-96.1524 28.6135,-96.2354 28.6427,-96.2078 28.6981,-96.3229 28.6419,-96.386 28.6748,-96.4284 28.7071,-96.4348 28.603,-96.5615 28.6454,-96.5736 28.7055,-96.6596 28.7226,-96.6614 28.7026,-96.6121 28.6394,-96.6385 28.5719,-96.5667 28.5825,-96.4153 28.4637,-96.4322 28.4325,-96.6503 28.3325,-96.7084 28.4075,-96.7857 28.4476,-96.7832 28.4004,-96.8589 28.4176,-96.7905 28.3192,-96.8095 28.2199,-96.9111 28.1357,-96.9868 28.1287,-97.0373 28.2013,-97.2415 28.0623,-97.15 28.0338,-97.1354 28.0472,-97.0246 28.1133,-97.031 28.0486,-97.1338 27.9009,-97.1569 27.8728,-97.2134 27.821,-97.2501 27.8764,-97.3548 27.8502,-97.3312 27.8738,-97.5281 27.8474,-97.3829 27.8387,-97.3617 27.7351,-97.245 27.6931,-97.3248 27.561,-97.4123 27.3224,-97.5011 27.2915,-97.4737 27.4029,-97.5339 27.3398,-97.6374 27.301,-97.7352 27.4182,-97.6619 27.2875,-97.7966 27.2726,-97.6574 27.2737,-97.5341 27.2253,-97.4487 27.2631,-97.4511 27.1216,-97.5052 27.0856,-97.479 26.9991,-97.5614 26.998,-97.5629 26.8389,-97.471 26.7501,-97.4464 26.5999,-97.4177 26.3702,-97.3406 26.3318,-97.2955 26.1908,-97.3121 26.1216,-97.2365 26.0646,-97.2516 25.9643,-97.1527 26.0275,-97.1463 25.9556)),((-94.5117 29.5158,-94.6592 29.4375,-94.7282 29.3716,-94.7774 29.3759,-94.6852 29.4513,-94.5117 29.5158)),((-94.7518 29.3329,-94.8049 29.2787,-95.0562 29.1299,-94.8613 29.2953,-94.7518 29.3329)),((-96.8201 28.1645,-96.7037 28.198,-96.3875 28.3762,-96.4403 28.3188,-96.6878 28.1859,-96.8479 28.0651,-96.8201 28.1645)),((-96.8722 28.1315,-96.85 28.0638,-97.0554 27.8472,-96.9632 28.0229,-96.8722 28.1315)),((-97.2943 26.6003,-97.3254 26.6003,-97.3094 26.6298,-97.3921 26.9367,-97.3916 27.1258,-97.3661 27.2781,-97.3712 27.2781,-97.3302 27.4352,-97.2472 27.5815,-97.1964 27.6837,-97.0925 27.8114,-97.0446 27.8344,-97.1504 27.7027,-97.2227 27.5765,-97.3472 27.278,-97.3793 27.0402,-97.3705 26.9081,-97.2901 26.6003,-97.2943 26.6003)))&quot;</value>
                  <value>31.25</value>
                  <value>-99.25</value>
                  <value>-9093.5266999999967</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='SPQ per Category'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{E8B9CD3C-82F5-498B-B385-231C81DD5F23}' />
    </window>
    <window class='worksheet' name='Sales vs Time'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tyr:Calculation_2655997913799688201:qk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA60352B-8061-4C58-9E0D-8773A156DE7B}' />
    </window>
    <window class='worksheet' name='Profit Discount by State'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A89B633F-1598-407A-996E-2B69A52CF23C}' />
    </window>
    <window class='worksheet' name='Profit Discount Analysis per State'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tyr:Calculation_2655997913799688201:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1453C6D9-E93C-4CE3-ACAF-E728C255D08A}' />
    </window>
    <window class='worksheet' name='SPQ per Item vs Time'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A5A62A8-CD60-4DBA-8355-1194D5861285}' />
    </window>
    <window class='worksheet' name='SPQ by Region'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Region Parameter (copy)_2655997914434125862]' type='parameter' />
            <card mode='type_in' param='[Parameters].[State Parameter (copy)_2655997914434125863]' type='parameter' />
            <card mode='type_in' param='[Parameters].[City Parameter (copy)_2655997914434125864]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914434486313:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:PostalCode:ok]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Region:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63D95205-999B-4156-9240-31A24A67C1A0}' />
    </window>
    <window class='worksheet' name='SPQ by State'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914434486313:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914436431914:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C88C203A-4E02-4CBE-BF5B-4EDCDBB41755}' />
    </window>
    <window class='worksheet' name='SPQ by City'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914434486313:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914436431914:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Calculation_2655997914436632619:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{2C2A75D9-ADC6-4D38-A650-F6CEFD9686DF}' />
    </window>
    <window class='worksheet' name='SPQ by PostalCode'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6E3B292-CD58-4789-ACAB-493FE1D75C30}' />
    </window>
    <window class='worksheet' name='Profit Sales per Segment'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BFDB8D4-924C-455A-8D2E-53D557FF0F88}' />
    </window>
    <window class='worksheet' name='Profit Margin per Segment vs time'>
      <cards>
        <edge name='left'>
          <strip size='205'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='6' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[attr:Segment:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F017FEEB-88D9-4CB6-85D5-192E10E6355C}' />
    </window>
    <window class='worksheet' name='Profit Rate per Category vs Time'>
      <cards>
        <edge name='left'>
          <strip size='205'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='3' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3202CB02-A6EA-45B3-AEC0-CD7F059A351C}' />
    </window>
    <window class='worksheet' name='SPQ per Category'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:SubCategory:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tyr:Calculation_2655997913799688201:qk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64A67125-8ABE-4D77-88D5-82748405C541}' />
    </window>
    <window class='worksheet' name='SPQ per Category (2)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='4' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:OrderDate:qk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:SubCategory:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tyr:Calculation_2655997913799688201:qk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C955B859-DD15-4133-B091-149FE765727E}' />
    </window>
    <window class='worksheet' name='Profit vs Category vs Segment'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Category:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997913806688267:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DF6A06C-9DC7-45B4-AE34-281B9F48BBEC}' />
    </window>
    <window class='worksheet' name='Avg Quantity per Day in Month'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{613076FF-890D-485F-ACAB-CA22054C86EC}' />
    </window>
    <window class='worksheet' name='SPQ YTD'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='datetime' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF98F4A1-63A7-4A91-A761-8BCD31F86C40}' />
    </window>
    <window class='worksheet' name='SPQ YTD Num'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6FF1FB89-8508-46E9-A71D-512CC44B0B69}' />
    </window>
    <window class='worksheet' name='Orders vs time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05C33FAA-0A05-4730-B1DC-A768D4DD0E85}' />
    </window>
    <window class='worksheet' name='Customer Distribution per Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 5]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[usr:Calculation_2655997914095648787:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4613C789-D562-46DD-8484-3B6FF1996234}' />
    </window>
    <window class='worksheet' name='Average Order Value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tyr:Calculation_2655997913799688201:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BEF305B-D973-4D20-9B21-99FAEEB98295}' />
    </window>
    <window class='worksheet' name='Profit Margin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]' type='filter' values='cascading' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Country:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:State:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[tyr:Calculation_2655997913799688201:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A139A61-1F37-448C-9208-310EB88BA497}' />
    </window>
    <window class='worksheet' name='Purchase Frequency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[none:Segment:nk]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3AF7E59F-369F-4259-BF20-9E6862DA8D02}' />
    </window>
    <window class='worksheet' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Region Parameter (copy)_2655997914426970145]</field>
            <field>[federated.1g0bsj40ur9ze01drk95z11a2y3v].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D711A77-E213-4574-851D-F1904692BA42}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='cac409f3-2f90-433e-9f70-c918573227a6' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='cac409f3-2f90-433e-9f70-c918573227a6' node-guid='4680041c-e680-4502-9741-3b8e87f5e33c' />
        <pair execution-subgraph-guid='cac409f3-2f90-433e-9f70-c918573227a6' node-guid='09a93445-2704-4c17-9d0c-d2623758354c' />
        <pair execution-subgraph-guid='cac409f3-2f90-433e-9f70-c918573227a6' node-guid='33ac56da-25b2-451f-8023-f39436399d70' />
        <pair execution-subgraph-guid='cac409f3-2f90-433e-9f70-c918573227a6' node-guid='ec64dd97-61e3-4115-9d55-ab3dce0c66f3' />
      </node-execution-subgraphs>
      <nodes>
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[pcto:sum:Calculation_1375568242964336640:qk:4]' node-guid='09a93445-2704-4c17-9d0c-d2623758354c' orientation='vertical' sheet-identifier='{D5B64AF2-39C6-4B0D-B2F9-69FA4662F030}' title-input-guid='41ad4cab-d944-4c1a-8196-26a186dd9f81' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' node-guid='33ac56da-25b2-451f-8023-f39436399d70' orientation='vertical' sheet-identifier='{D5B64AF2-39C6-4B0D-B2F9-69FA4662F030}' title-input-guid='9b700fd9-5694-4a39-8c44-6de685b091e6' />
        <single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='9770a2eb-fc0c-4d5d-9258-0b8da4169fe2' node-guid='4680041c-e680-4502-9741-3b8e87f5e33c' value-output-guid='78468d97-5013-43d4-aec6-86ecfe1b34a0' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.1g0bsj40ur9ze01drk95z11a2y3v].[sum:Calculation_1375568242964336640:qk]' node-guid='ec64dd97-61e3-4115-9d55-ab3dce0c66f3' orientation='vertical' sheet-identifier='{84F51133-2ACF-430D-9B24-B8EB7A7E8DE2}' title-input-guid='7ab1e6c6-958b-4e58-963f-cbdff3e1abe1' />
      </nodes>
      <edges>
        <edge from='78468d97-5013-43d4-aec6-86ecfe1b34a0' to='9b700fd9-5694-4a39-8c44-6de685b091e6' />
        <edge from='78468d97-5013-43d4-aec6-86ecfe1b34a0' to='41ad4cab-d944-4c1a-8196-26a186dd9f81' />
        <edge from='78468d97-5013-43d4-aec6-86ecfe1b34a0' to='7ab1e6c6-958b-4e58-963f-cbdff3e1abe1' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='192' name='Average Order Value' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Quantity per Day in Month' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Customer Distribution per Segment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Exec Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Orders vs time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Discount Analysis per State' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit Discount by State' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Margin' width='192'>
      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
      KHN7838ARbCi9qDZWSEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Margin per Segment vs time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Rate per Category vs Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Sales per Segment' width='192'>
      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
      YhgGgUBrhHdLGbg1BJNS6rDd42Sa5oks91VwHKet+gNujQu0uUo6t8+esc5gp2J9Zx+nvML0
      6Dnuzt0i0NHFxekkd+/cpRQIc+G1JEazSV9XF5u7OaJDZ+Vet+JEuBKA3sFRegdHDx/H+4ee
      TGnevBYHWu/AV95883B66Mks451uVCDEy3nFF8Qonh0y6IvebUUIt8l5AOFpEgDhaRIA4WkS
      AOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDh
      aa6NC1SvVbE1aMcmk96m2rDRWrOXTbNfqQNQKmTI7VfQ2NTrFtqxqdbqrpQgxMtw5ZLIbGqF
      haUUV957n/Lj++wZnWzsPGSyP8hyFnyNNCPnenmwXqZDbcD4EDvrFj0d+5SD/YyGgm6UIcQL
      cyUA8cQoI6UKGtipOFy+PMzDu7OsPK4zce0K+6v32VzYInntKqHsJvv7BVKrG+z19/P21TMy
      LtCXhIwL9BkM4+mWlLJtLA227RA0FXVLY9kWgZBBvW7jt5sov494/xDa3qdmOXT4TRkX6Eug
      HccFcmdoxM1VUpk8a2vrnEvEuH1rFh0+y9iFIVZmb7FX8zE8fZ7s4jwbuSpne3qId3fz2tQQ
      m6mMWzdCFeKFuT8ukNa8efYcShkopXn7WjcohVKKa2+9QWuoFMXISGv2qS43KhDi5bg/LpBS
      GIfj/yiU8eywiXLUVZwuskYKT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAI
      T5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE9zPQCVvQxzd26TzpfQdp0H87dZ3tjFcSxW
      F+e5v7yJ5dTIZEpY9TLpTMHtEoQ4MtcviVxafszFmWkW5u9hR/34B89jbz8kvZKhHB0mVt9k
      twDZbcil0vSMzbhdghBH5noAuiI+bt++R71RwdRdjE2FyRcCZDdL9L4bIbgbIVersL26TMfA
      GOejARkX6EtCxgU6gsHR8/TUq6yspOgLNdnY2UeXq/QOdLC9kSfW3CPc00tidIaomWEzVybZ
      HcEv4wKdeu04LpDrAaiV9khliwyOjROPmFQeLWN2D9Of7Ka5/Agr3Eeiu4eIz6azo4dcUcYG
      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
      cPuyl4QhGAUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit vs Category vs Segment' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Purchase Frequency' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAb0klEQVR4nO3d+Y8c553f8XdV9X33HD33yWNI8RYpi5ZseRVbG0taxzCyNpzsIrC9m80C
      AYINECD/QRaIESQBgjhZA7s5dlfJemPHa62s7Mpay5YokeZNiuSQM8O5j57p7um7q6qrnvww
      5IiSikPO1Zyefl7AYIbs69vV/amq56mnnlKEEAJJalDqky5Akp4k1/0/CoUClmVt6sl0Xcfr
      9W66KEmqFWUrd4Gy2SzRaHSrnk6Stp3cBZIamgyA1NDWHQAhBFPjY5gWCMtgcmqKdLawHbVJ
      0rZzPfoun+bzujBtcLncBL0ahlHFsixs26ZarW51jZK0bTYQAJvlzDJVVxhDKXNzdIahA0No
      moaqqrhcG8qUJD0RG+4FsqsGptDwurXV/5O9QFK92fDqWnV5kD3+Ur2TvUBSQ5MBkBqabLE+
      AWXdRAgI+NxPupRdoayb/PLqJO9cHifo9xAP+YmHfcTDH/2OBr3EQj48D7RZQQ6FqCkhBMOT
      Kb7/+kUs2+a3XjrCyaFOVEV5rMdbto1ZtfG6NZTHfMxuJYSgUDb4m1+N8t61KY7va+fFE/2o
      ikImXyFTKJPJV0jnV35nCys/kaCPnkSEvvYYA+0xGYBaMUyL//POTa6NLfDP/sFJvB4X//3N
      Kwgh+NbLx2lvCq352LM3p3njgxEKZYOO5hDPH+7hxL4OIsGd1xUhhCCdLxMP+x873Ot57mSm
      yBtnR7g6usAXjvfxpZODhPyeRz7WFoJUtsRkMsfE/DLjc8syANtNCMHkQpbvv36Rg30tfP3X
      Dq1uhm1bcPH2HK/97DqnD3Xzlef24/O47j0OssUKf3fxLu9em+JAbwsvn95LWzzIVDLHe9cm
      uTK6QEs0wHOHezi+t51wwPNEtgxCCCpGldHZDBdvz3FjfJFsUedgbwvffuU44cDmQnr/+Udm
      0vz80jjTi3l+/Zk9PH+kZ3V5bZQMgAMhBMuFClPJHIvLRZ4/3IvPu/4FbduCN8+O8LOLd/nO
      qyd4qq8Vp+9nSTf58bvDXBie5bdfOkprLMDr799meDLFC8f6ePHpfqJB36ceZ1k2Y3PLvP/h
      FFdGFgj7PfR1xOhuCdOdiNDZEiYS8G5LKOx7a+KrowtcvD3HQrrAQGecp/d18FR/K9GQl7cv
      jvPGB3f41pePcWxv+7pfI1uscPH2PBeGZ5lZzDHYGeezh3o4vq8dl7Y1/Td1E4ClbIlzN2e4
      eHuOlmiAaNBLNORb+R30EQ56cakKthBULZuqJbAsm6plY1oWhmnh87hQVQVNVVFVBVVR0FSF
      km4ylcwxuZBldilPvqTj97npTay8l1uTS5x+qptf/8wemsL+R9YqhGA2VeCP//oSLdEA33r5
      OP5HBEgIwVy6wJ+8cZlSxeDVz+7nMwe7HuuDFgIEgoV0galkjpmlHNPJHLNLeSpGlVDAS2dz
      iGcOdHFooBW/9/Ea30IIDNMinS8zlyowuZBlKpllPl2kUDaIhXwcHkxwcn8H/e0xFIWPhU0I
      wUKmyH/58Xm6WyP81ktH1nztqmUzlcxyYXiOK6Pz6IbF8X3tnBrqZE9XE+onnn8rbCgAwrZB
      UVEUqFaraNpKo2wrAyCEoFgxuTA8y7vXpsgVdZ450MmxvW3ohkW2WCFb0Fd+F3WyRR3LttHu
      fcFd2kc/qqJgWjYel4olBLa98mPd++31aPQkovQmInS2RIgEPXhcHzU0C2WDn18a5+8ujfNU
      fyu/8dl9JOLB1duFEOimxehMmssj89wYX6RqCX7zCwc5daBzXR+aba98HKq6+Q9aCIFRtciX
      DKaSWT64McOdqRQDnXE+d6SHp/pb8bhcH9sqVS2b+XSBy3fmuTq2QDJTpCnip7M5TG9blJ5E
      hLZ4iHDAg9ulPfzFH2BWLf76gzucuT7F77xygv09zSiKshqw29Npzt2c4cb4Ik0RP6eGOjm+
      t43WWHBLlsNa1h0AIWxu37hO7/6jeO0ctyeShMIxujtatiQAVcvm4u05fnl1gtmlPMf2tvO5
      I70MdMSeeM+HWbV49+okb54bpbMlzBeO9zGdzHF5ZJ50vkxfIsrxfR0cGmilORJw3N150oyq
      xY3xRd69OsnobIZ9XU08+1QXZb3KpZF5xueWiYW8HN/bzpE9bfQmolv2Jbw7l+GPfnKRo4MJ
      uhNRzt+aZTKZpb89xmcOdnF0MEHwMRqzW2lDW4DUwjT+pm7chTmWtDiV1AK9vd3kcjnC4fCm
      CppK5njrwjjPHe5mT2dsy/b1tlLVsrk2tsi716cY7IhzbE+C9qbgjqx1LbppcXMyxdkb04T8
      Xo7vbWOwI/bI3bXNMKoWPzkzQlk3OXWgg8GOGJ7H3JJshw1sASymxyfwBINoLi/FbJp4opNI
      0LdrGsFS46ibRrAkbYf62mZL0haTAZAamgyA1NBkAKSGtmYAdF1HThwq7WaOHb6Xz/6CZE4n
      lanwzW98pdY1SVLNOAags3eQoZYOlpMLta5HkmrKcRco0drCyPAw4XgzO/BoviRtGec2gKKS
      nBrh9Tfe4MbIRI1LkqTacTwSbJdSjGbAb5Xo6un5xKAuQT6Xwx+K4FIV8rks/lAYl6rKI8FS
      3XFsAyhuP3evvYMn0kpXT8/HbhPVIoupPOpygd5WH1Nzy/j9Zfp72hBCYNt2TQqXpK3gGABh
      lijogv5wmE82AoRt4vKGqOrLVA0XqseDgs39DYm84pJUTxwDoHoChLya45dZccfwimmizTFy
      VQipFWKtbaiqiqIoaNqTG9oqSevlGADb1CnkUqiRNhB8bCugKAptXQ/sFjXFtrlESdo+D2kD
      +IiGQ3KmZ2nXc+wGVVCINLeRmp+udT2SVFMPHQtkmgatiYTs1ZF2NccACCPL2HSGsVvXmE9l
      a12TJNWMcxvA18xgmx8tto/O1nita5KkmnEMgFVKMz49Q9Dc3AwPkrTTOe4Cqd4gwUCE/p62
      WtcjSTX10EawYZpUDf1TR4IlaTdxDMD75y/R2tnJwX39NS5HkmrLMQAdzXFcisLI3U8fBxBC
      sJScRzctQJBKzlOsmNtdpyRtC8dG8MD+p3B5xgjEEp++sZqjaLjIz8zQmwgwNpvhQCiGbWvy
      QtlS3XHuBSos8M4vfomneZCvv/LCJ9oBCqZeQVUFplklEo2ylFwk1NeNqqpyMJxUV5xHg/pj
      7B/oY9F0mKnXFaatxcbldlGxVDqbDTy+0OrMzU96BmdJWg/n0W5mibGZFF0Dez51k6IohKMr
      I0BXLhUR2L7qJGmbOXeDaj4ifg+mZdW4HEmqLecAWDqRWJxcrlDjciSptpwHwwlI5wt0d7TJ
      A2HSruYQAMHwrZvouoFlWci5EaXdzCEACkP79+KPNJFZTNa+IkmqIeduUG+Ewa5Wunp7d+SF
      3iRpqzg3goXF9auXGRmblHtA0q72kKkRNQYGB0in07INIO1qztOi2BamWUWRX35pl3MeDn3m
      PZLJLJ9/8flPtQGEEMxOTZAv6QAUllPk7v0tSfXGcQsQ8PtR0oucv3Cd504e/tihAGFmsFxx
      lpJzhHq7mJ2aIdjRQ9DrkqNBpbrjGIATz36eEw95gKJ6yaUm8YWCLKeWKBsGxnKerpY4qqrK
      ybSkurKhC2Xbto1tGRiWRsDnXv1/OT26VG82tLpWVRVV9eFyP/q+krSTycukSg1NBkBqaDIA
      UkOTAZAamgyA1NBkAKSGJgMgNTQZAKmhyQBIDW3dARC2wfDNW8wuLCGqOpOTk8zOL21HbZK0
      7dY9FEIYWYLNfeileRRXM1gGwVACy7LkaFCp7qw7AIq3CTM3SiAcY3F+hnTBwB8z0EI+ORpU
      qjsbGg0KIGwboSioD5wxI0eDSvVmw6trRVXlnFlS3ZO9QFJDkwGQGpoMgNTQZACkhiYDIDU0
      GQCpoa1/KIQQTE+Mki1UQNhMjI2uTpIlSfVm/QEw0+BrJ7M0j7m8gKe1h1Ryfjtqk6Rtt+4A
      KJqf3NIkQtEoC0hPj6O6/dtRmyRtuw1PjCUsE9PW8LjV1aPCciiEVG9Wh0IUCoWVSyKtk175
      6O9SqbQlRUlSrawGIBQKrfvBtp5jZDpFOBQl0RLFtm2CweCWFihJ22lTY5eFbVEqlfD6gmia
      JodDS3VnU8cBhOIi6Pfj9chJQqX6tOHzAZzIRrBUb+SR4A0qlg1++IubpHPlJ13KjlQsG9j2
      zr/G1q7fAggheO/aFNfuJvndV5/G7dp85pcLFb772hn62qPcnFjiq58b4vNH+9DU3XGKkC0E
      Zd3k7uwyuZLOswe70LTHW25CCK6MLvCff/QrYiEfR/e0cWqokz1dcVyairLDrru76wNw+c48
      f/7WNfZ2N2FWbX7/qyfR1I2HYCFd4N/97/f52gsHOP1UN7mizn978wr5ks63XzlBZ3O47q6t
      bFYtZpfy3JlJc3sqxcR8Ftu26euIoRsWpYrB733lJG1Na/cUWrbN62duc/bGDH/w9dN43RqX
      Rxa4cHuWqWSO3kSUk0MdHBlMEAv5ahYGy7KZWcrT1Rr+1Ge/awMgBIzOpPnej8/zr//x8zRH
      /fzJG5cB+PYrxzcUgqlkln//Fx/wT758jGN72le/6LYQq0H7/NFeXn52Hx63tpVvByEEc6kC
      U8kcB/taCAc8m/4ClXSTn18a560LY7REA+zvbmZ/TzP97TFCfg+qqiCE4PzwHH/+1rV7W7pe
      x2VX1k3+619dQNNUfvfVp/F7P+oNFEJgmBZjsxnO357j+liSoN/Nc4d6eOZAJ5Ggd8vDIIRg
      KVvincsTnL0xjdutYVmC5w738PmjvcTDKwHctQFYSBf4wz97lz/4zdP0d8SAlTXB9358nmjI
      x2+/dGRdC314KsX3/u+v+Odf+wz7upsc71PSTf7i7Q8ZnkrxO6+cYE9X06a3BmbV4le3ZvnZ
      xbuUKiZ9bVFGZzMEvG5ODnXw9P4OulrC63ovZd3kzXMjvHN5gmcOdPLy6X00hdcezpItVPj+
      6xcB+Ke/8TTRkG/1tvl0gf/wgw/43JFeXjm9D/URu4K2EEwtZDnz4TQXhmdpjgZ44WgvJ4c6
      8Xk+Co5tCxYyBSYWstydW2ZsJk2uZLCnK05/e4z+9hg9iQh+70e9kFXL5vzwLG9fuEu2pPPC
      0V6eO9xDPOxnKVvi3auTvHdtkkQ8xEvPDNZXAO6X+qgPO50v82/+5y/5zisnONjX8rH7Vy2b
      //TDc7Q1hfjm3zv0yOcS99buf/q31/iXXz9NdyLyyPuPzWb44zcuYwtBX1uUod5m9nY1kYgH
      8bhcjwyFEIKJhSw/vzTO5ZF5DvW38sWTgwx0xAAFgWAhXeDC8BwXb8+RK+kM9bZweCBBe1OQ
      SMBL0O/B69ZW358QkC1W+JtfjXLm+hSfO9LLl5/dS9DnfuzwCCH45dVJfvSLm/yjLx3h1IFO
      rozM8z/+31W+88pxDg8k1r0mt23B2FyGX1yZ4NpYkt5EhKDfw3QyR66o0xTx09ceZaAjzkBH
      jIDPw+T8MuPzy4zPZ5lezKGpCq2xIEG/m9tTKQ70tvClk4MMdsU/NmvJg695a3KJvz0/tvMC
      YNk2s0t5UtkyS7kSqWyJVK5MJl9hOV+matl8+dl9fOF438fWFveVKiZ/+Gfv8vKze3nucI/j
      a+hmlf/4g7Ps723mq88POX5oQgiqls0HH07zkzO3+VfffI5E/PGPctu2IFusMLGQZXgyxchM
      mqVskeZIgD2dTTRFfFj2ymtUq/bKb8vGqFqMzqTRNJUXT/Rz6kAnAe/Dv6RCCPIlg1uTS9wY
      X2QxWyJf1ClWTIQQxMI+4iE/qgIjsxl+7Xg/Xzw5QMjveez38knJTJE/+smF1Xr/xT98lvZH
      tA8eh25WuTOdxqxadLdGiIV8uDRtzRWGLQTFssHicol0vsyB3pZ1hXrHBWByIctrb12jKeKn
      ORqgJRqgOeInHvYTC/moGFVef/82l+7M8+KJfr749ADBex+mWbX47mtnODnUwd//zN41X8cw
      Lf7ta+9xYl8Hr352H0IICmWD8fkst6eWGJ5MkcqVScSD/P5XTxIN+tZ8vsdh24LZVJ6x2QzL
      hQouTXX86WoN09Wy9pbmcehmleV8hUy+QqFicGQggddhpbERlm1z6c48hwcSjiuierHjAvA4
      7q/13jw3wgcfTvPsU928dGqQ1966RksswDdefPSuDaxsLb77v87gdWvkijqmZdPfHmN/TzND
      Pc20NQXxuLQd13UnbZ26DMCDCmWDty/e5c1zIxwdbOP3vnLykY2wBxUrBmMzGboTkZp2zUk7
      Q90H4D7LslFUxbHRI0kPU787b5/wuEcqJelB8lsjNTTnABg5fvRXP2U+mWLnD2eSpI1zDIDQ
      /MT9MLuYQSZA2s0cA2CXU0zNzjE8Ol3reiSpphwDoHpCqMImHPLyqIsAVE0Dy7a3ozZJ2nbO
      u0BWGVeojb7OxJoPFkaBkbvT6Mb6Z5OQpJ3AsRtUUVSEbaHrxpoPtso5CqbF/MICfd0d8iJ5
      Ut1xPg7gCtLWHEQ3jJVG8EN2g1yRNjrC0wRicTkrhFSXHL+twixTMmyMfH7tRysaXb1921GX
      JNWEYxsguzhHWbgRcndG2uUctwDeUJSW8DJuX/iRvUCSVM8ctwB+v4/piUl0oyIPhEm7mnMv
      kDvI/n19aP6Q3AJIu5rzWCBFJRqNMTs1JbcA0q7muAWYmpmjvaMTwdZO7SFJO41jAKbvDmO5
      gmRyOkND+2tdkyTVjOMZYcIyWc6XiUbC6zq9cCfNCyRJj8OxDaBYZf7yB3/JpevDsgkg7WoP
      OR/Ax7FDewmFw7IRLO1qjm0AW89x584dtJRgf39XrWuSpJpxDIDq9tPU0k6gKVzreiSpppyP
      A1g6Bd1i7u4wUwupGpckSbXzkHmBBEKsTOW3nulGZC+QVG+cG8GlFG+//TN++NN32LppsyRp
      53E+e8XtRTddPH/qYI3LkaTacj4OgEYxl2QumZGD4aRdzXlaFNsiHPBgWDzyOMDizASLueI2
      lCZJ289hF0ggEOiVMunltU+JtPQC88kMYS1AU9AnT4qX6o5jG+DO9UuUlDBho7Dmg21UwuEA
      wrLlSfFSXXLYBVIYOnqKqFdZGQqxBrc3QP/e/Qx0tW1TeZK0vZwbwXaV6dl5wiF5Rpi0uzkG
      IJXJcmBoL5Ho5q9TJUk7mWMArn54i2dOn2bi9k15IEza1RwDcHDfIOc++ICOvj2bvtCzJO1k
      a14jbHZmlo6uzsduBsixQFK9cZ4a0TI4d/YcuuKno6uz1jVJUs04D4bTl5lI5km0ttS6Hkmq
      KeduUHeIiNtiYTFd63okqaYcAiC4deUcs+ky4VCg9hVJUg05tgH2H36acK+NohfWvD6AJNU7
      x6EQqqbx4YX3GR6frX1FklRDzuc7Vsu4PR5SWTnMWdrdnAPgCWPqJnt65SA3aXdzbASbxTRl
      4SEei8n9f2lXc9wCTEzOEgpozM8vypnhpF3NsRG8Z7CfQrFMJiOPA0i720NmhvPRHG/imVPH
      5S6QtKs9dNardHKSd89eeeQTVMplLFvuJ0n1yfkEXtXDseNP8+HN0TUPhImqTjaXpWJk6e1e
      6TFaY3CpJO04jgEo51O8+dOfcuDUC2vuAimqSi6Xp6d/ECEEtm1jWdZ21SpJW84xAB9cuMLX
      vv4NLpy/Ahx56IPtqkHVsskXirTGI3JWCKnuOH5b21uauHXjBpGm5jUfrHqCHDwwtC2FSVIt
      rHlG2HrJM8KkevP4c59L0i4kAyA1NBkAqaHJAEgNTQZAamgyAFJDkwGQGpoMgNTQZACkhiYD
      IDU0GQCpockASA1NBkBqaJsOgBBCngUm1a1NBcDW89wcvs3sgpw9QqpPmwpAtZQn3jWAWV77
      gtqStFNtKgCeWAJ9cYpYq5xCUapPq2eEFQqFTZ/QXiqVCATkNQWk+rF6TnAoFNqSJ7x/SqRl
      WWia5ngf27ZRVeeNj23bKIqC4nB5yvuNbafbNvOctm1vuNatvm2t9wgPX673OyO2sp7NPOdm
      Pv+NLpuNPO+2nRMshHhooTvJoxbqTlNPy7Ue6tzy4wCWZd1bczzefZ3YVhWzamFVTcyqtbqW
      rt779/oJqlULIWyqln3vv2xsWwAC06wibBvDMOHeawFUq9UNvNY6qhICy7JXX2/N+9oWtnAI
      qhAYhoEQAl3XV5eVACyruq0XOr+/fB5cTivvRVA1TWwhMIwHahICvVLBsh79fjdj5TtoYz/G
      m9/ySXwmR24SbG6lannRrAK+UJRAwEe5WKZsmPhdCrliEZfHTyG7RCTeht8NFi4Uq4IrEEMv
      ZFjK5PGoAlNx0RR2UTL8RAIKcwtLDB3Yv84pS0tcujTBnq4gcyWL1kiISMBNSQnjruZZSC7h
      crswKiYt7S1klgv0tsU5/+Eonz11fKsX0apqucT10bu0tTQTDnipWCohv3el4kIWTyBMPpPC
      RiXkMpkqeNnb00w2lSHaFKVYrBD2u0ktLVGomLhcEIi0sJRc5NCBQT48f5a+p58n6t6e+u9c
      v0z3gSNcuXiZY4eGsNCw7SqxkJ+lVAq9WEDHQyDgJ5tKsXegm4mFNL3d3fi17TsGO3z9Ch09
      HZh2GNPIE45E8XlU9HIFw1ZQLJ1ixcAfCG19ADzBGOXlJIbtIdjcw8L0CKblQvW4CHpd5PDg
      1cA0Knj9QSqFLKlyEX8wiqmX2BtvoZjRicab0EsFNKtKc2srlekcLk2jKkAI1nkFe4FXU1gs
      WXiqFfJZg9xSCaX1KRKuKm5/GMU2aPILXOEmfMUSIyMjVIoF9KqF1+W8L7tZQkA04CKZKWAY
      OhqQX66iuRQKOYtAsEAw5KNSUMgUS7S0NXPz0jXinS2kRrN0Dw6iKTpFE/xeD4nWEHM5lXgk
      yOLMBNlimVyhRDS+PR0ToeZWpoZvEYpFKeRzzKdzREIB4pEgxWKZRMhHKdhBeWmO5uYoqtuD
      ZhkspjL0dia2pSaAaFMzi/OzVESM/s440xNjKN4QilnG6w+gaSoIKJcKW98GcGkaLqVK0dSo
      5DOEm9soZDNEQz4Wl4vEY1FURQEE5WIOEw9etYqJm5DfSygUYnLsDqbmJxZwYQo3PpdFtlDF
      67Kp4qaro22dATDJLVcwhYVmG+SKZcLBAGogjr48x3LeoLU1Rq5o0Bzxs5heprunj1IxTzQS
      2arF8ymWaWLYNtlMBp9bo2IpBFygBiJkF2fxhWIE/G4sE+xqheRygfZEM0uLS8SamgmHw5Sz
      S8wspEm0tZJJ52hvb2FhIUmivRPNqqD4o3i3J78UCkUqlRJujwejXKRiqURCAYIehTvjs7Qm
      2ihm08Rb20gvJolEo+SyWZraOokEvNtTFFAsFLDMEkILkMsu09qWYDm9jN+jUNAF0XCAlTk/
      hZwYS2pscjCc1NBkAKSGJqdylhpGMTNP2vCilTME27qJ+j0yAFLjWJoe5syUi8jybWKDh8hl
      l+UukNRAFBc+O4PiT5BOLuHWLNkLJDUO26quXM9OUVCBYrksd4GkxqFqLtQHjolEwmH+PzJl
      kwqV3PRKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SPQ YTD' width='190'>
      iVBORw0KGgoAAAANSUhEUgAAAL4AAADACAYAAAC6XNksAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAH5UlEQVR4nO3cb2jU9wHH8Y+eKZdkl15tazVDmbpJDEJTk+EoRbQP0sYVomJpBxMLQ1ex
      UDukYOmGbMV0w/VBUUpphVz3RFsR3RMxVK3RKSpZUy2ri2tuRHcmwf/n/ZIuXm4P2tjzEqVd
      TO7i5/16dr/v7/e7749758v38uDGZTKZjAAz4/M9ASAfCB+WCB+WCB+WCB+WCB+WCB+WCP87
      CoIg31PAXUT4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4
      sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sET4sDQh3xPA2FP/2rZ8
      T+F7273x+Vtes+LDEuHDEuHDEuHDEuHDEuHDEuHDEuHDEuHDEuHDEuHDEuHDEuHDEuHDEuHD
      EuHDEuHDEuHDEuHDEuHDEuHDEuHD0hgIv0/dJ3apuWOIodRZHd61RQ3rG7Rl+x59cfnbofSF
      Fu3a0qANb32gfW3XlL450qHmnJv1nt6rnS0XR2j+KEQF/Ls6aV1ra1LjX1r0wI/u03+rpfnT
      soZ7T6lx0yH9ePUqrV9cpHTveV3s+WYs1aKtje1asOpVLS5NqaXxHe0uWqel00OSLunMGWn+
      wM1SrdrW1K/aNQ+O8vMhnwp4xb+uRHKmXtjwupZXD47y0t8+0YRnf60nJhVJkkLhKZr0wNdj
      V08cU8mipZpVFpJCZapeUqP2/aeyVv0BKR2N7dUjy2pVHhrRh0GBKeDw71dF9SyVDRnkVZ38
      tERzKkNSX0pXkr23RB3/sl8zZ2RdOHG2KvrOqSvnLp1Nm3WscqXqqN5OAW917qRHPerU3/+8
      UQfLfqjofdd19l9pPbF6jRaUS+l0sYrD2eePV6i7S92SyiWpfb9isYM699WTWrtq4qC7B0Ew
      5Lsmk8kReBaMhtzPboyGL+kHc/Tsi/WaOvA6dVSb3zukx9YuUGioBbykWDf/FqbOU339FB1+
      9yM1J+YOWvFLSkoGXR4EgSKRyF18AIym3M+ugLc6dxJV9MZZnevNOlQ6XTMjPeqRFC6+rPOd
      WWPpTiXSD+nmN4WiUkWjM/TMS0+pa0eTEoM3/7jHjdHww3rsp+N14OPEt3v7VFzxGxMVlfST
      qsn69Ej85liq9biCmho9nHub0iotr72s9xpblRqtqaMgFPBWp0PNsQOKS9LFdrUrpthnkqYv
      1Ir50xSet0KLt7+tP22ZraoZ1/RFa1JzV7z49XamcokWHX9TDe8/rurI5zpy9lGtfmXwXl6S
      QhXPaWV8kzbvmaR1deXia66HcZlMJpPvSQxHujepZO94lUZLVZQz1pe6olR/WJFIeNhBB0Ew
      5N7f0b3w+/gFvOJ/N6FwRNHw0GNFpVFFR3c6GCPG6B4fGB7ChyXChyXChyXChyXChyXChyXC
      hyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXC
      hyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXC
      hyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXChyXC
      hyXCh6UxEH6fuk/sUnPH7cbTShzZrthfT+pq9tELLdq1pUEb3vpA+9quKX1zpEPNOTfrPb1X
      O1su3vWZo3AVcPhpXWvbo7d/+0ftPdmmM5duc1Zijz5s71NP63/UM3Aw1aKtje2qXP6qNry8
      WNFD72h3fCD9SzqTfbNUq7Y19etnVQ+O4LOg0BRw+NeVSM7UCxte1/Lq20SZTqhpR0pP/2KO
      irIOXz1xTCWLlmpWWUgKlal6SY3a95/KWvUHpHQ0tlePLKtVeWhkngKFqYDDv18V1bNUdocg
      O/ft0IWF9arIOSf+Zb9mzsg6OHG2KvrOqSv3+qbNOla5UnVUb2dCvifwf+ts0oddC7WqNpwz
      kFY6XaziWw6PV6i7S92SyiWpfb9isYM699WTWrtq4qBbB0Ew5Fsmk8m7M3eMutzPboyGf0mf
      7E5o/i9rlZu9FFJoqAW8pPjbc6fOU339FB1+9yM1J+YOWvFLSkoGXR4EgSKRyPCnjrzI/ezG
      Zvin92vfv/+pG2+s13ZJUp+uX72htvVtevo3L2tK8WXFO6Wqyd+cn+5UIv2QagauLypVNDpD
      z7z0lBq3Nimxpo49vpmxGX7FMv2hYVnWgVZt/f15/fx3dZosKV01WTuPxFW7dLpCklKtxxXU
      LNPDufcprdLy2n/ojcZWrftVlUpH7QGQbwUcfoeaYwcUl6SL7WpXTLHPJE1fqBXzp93xylDl
      Ei06/qYa3n9c1ZHPdeTso1r9yuC9vCSFKp7Tyvgmbd4zSevqysXC72FcJpPJ5HsSI6UvdUWp
      /rAikfCwgw6CYMi9v6P617blewrf2+6Nz9/yuoBX/OErKo0qmu9JoCAV8P/xgZFD+LBE+LB0
      T+/xR9O98IXPCSs+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+
      LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+
      LBE+LBE+LBE+LBE+LBE+LBE+LBE+LBE+LP0PDhjeloQZYbkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='42' name='SPQ YTD Num' width='179'>
      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
      gwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SPQ by PostalCode' width='192'>
      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
      krA4qNeJ/wlEONzP9tu7JgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SPQ by Region' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SPQ by State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARoElEQVR4nO3d2Y8cx2EG8K/6nJm9D3J57S5vkYYVnSAdJZYRU4kQxIBhI4gDJU8B/B7Y
      8Ksf8paHAPkDgjzlMhIYTgBJFhzIcRxfomSZFiWSEs8ll8slubvcnd05+qjKw7CbPT09x+5O
      zyy3vx+w5hw9PS2jvumqrq4qUSwWlWmaIGpHKQXP8+C6bviaEKLusRACSikoperei+9HKbWl
      Y9B1HVLKhv0H3xvsP/qa53kIynj0PSEEDNM0Ydv2lg6GskEpBd/3oZSCYRgwTROe50EpBU3T
      4Ps+AEDTtIbCFxTSaDCCfUb/TRIt1ECt8Ash4Hle+L6maZBS1oUhvk+lFHRdr3seBmDL/69Q
      ZjiOA8dxANQKuW3bMAwDSilUq9VwOyll+DgahrjNFPro8+j+o+IhiO8jCKymadA0rf6zTY+E
      6DHDMMLC5fs+yuUyHMcJC128UAH1v/BKqbDaEhf8Esc/F/1s0vPgM8ExxKtb8eeGYcD3/YYQ
      MQDUlqZpKBQKYUFXSsF1XVQqFXieFxbCoHAG2zVrAzR7fTOaBaPV2cWyrIa2AwNAbQW/sNF6
      dFTwCx9sG7QNgmpQUp086TuafXeg2fdvJlCGYYRtCKUUA0CdsywLhUIBhtG86SilhGmaMAyj
      rrrR7he6WSji7YGkzwTfEwRvM4FgAKgjQV3fMAzkcrmWIfB9H7quw7Ks8LNA6+pJklaFv9l2
      zRrKwXasAtG2CSFg23biVRUAYV+BruswTROmabb9VW73vq7rYdWl3X7a9TNE32MAaNOCs0Eu
      lwurHPG/oHFsGEZdtaTVmaOVdmePoNAH1aBWgn4LgAGgLQoaxZZlJTZOpZRwHCfshMrn82HV
      qdM6enS7VlWbJNFAxM8IQR8GwADQNgQhyOVySLqdxvd9VCoVlMvl8GwQPSO0u3Yfv+bfbvvo
      97YSVKeUUuwJpu0JCrJt2xBCwHVdCCHq7tfxfR/VahW5XA7lchmlUgmPVou4c3+p/f4j/5vw
      BqDq3zaVi5z9JIye70PXE4q5qLVVGADqCiEELMuCaZrhLz/w5Ffc9324rgvLslCpVOBKhZ/P
      AzBzXT2OA85t/N4LJ8PvvnFnAQenpxO3tcEqEHVR0DjWdT2xrh+0C5aWl3Hl2i1Me7eg/PZX
      djZ1DJHHSqnaGaIFBoC6LrhCFPQHRO8jAoBfvH8BpqrA9fzE2k0vMQCUCiEEfvyr3+D8hY+x
      sbEBz/Og6zqUUvj6V17H2TNn8ODhA8Apd/d7Y8fQDtsAlJqFdeBi0cCH81cwNaAhp0kcmhpH
      Pp/H6vID6MqDt/EQyA1170s3eUZhACg144M2ljZ0bIgxXH88bODjay6gqhCrizgyPYO5h6to
      fdGyJn5fUNPtYglodUlUCMEqEKXnyy+egOWt170mdAPCsODAwI0792CP7Uu87z/6b/xxS5Hy
      L4TAyEAOG+sbTTdnACg1eyYncGS0sYhJpwxZfABlDWHt3i3Ix1eCpJRh/0H03/hfdGBLw20Y
      8WPYM4ml+4sNxxC0DxgASo0QAvtH80Ds17u8eBXayAH4QocHA5qmh9vH/6L3EUVfa3bbc/wl
      IQTW19YSxyRwPACl7tTRGQinvhpkDk7AW7gIu7oCe3IGoskNddGCHxT6VoUfSG4Dnz51Atc/
      /TQc1xzFAFCqxsdGYHuxX2ChwcgPw5p9EWJwT0f76XyQS+N2uVwOp04cxcLcXMOZgAGgVOm6
      jqNDPuTyzfA1c2QK5uEzKGuDXf++ZjnRNA0zh/bj7txc/etdPwKimOnDR2Hln1zrT7oTtBNb
      nUwrkMvlUMhZmLtxIxxcwwBQ6oZsDYa/+R7fVpNdNf9M6/f3Te3F3vERXLpwAQADQD2wVlxH
      sepDqeS5gZppNb1iM1KJtmeYkZERDA0PA2AAqAdmZ2cwbazghHsZ9sqn0IrzUKqzEV7RaQyT
      CnV81Nedomg6CVfA83zIx2/zVghK3eTEBF44uQ9T4wN42alNrPvWxTmsFQ53vA+lFJTnQLgb
      MCrLtdfqtnjcsVVZhu/PtBl7rKAbtb4HBoBS5zgOhPIghEDOrk2VcsAuYS2yTe3efQURDGhX
      CgoK8D3YpXnsH1Q4MORjcnQAE2NTTz4T43njuHj1Mxw5fqJpCDzXgxYM0u/efyZRMtu2IWNF
      bWosj0/m5iGGpiA27uOZoQ3kDInFdYV138LBARcFW0feAE58fi/02EwPzao4hqHjuRP7cfnW
      TcwcPZ64TalcwuDICJaXlhgASp+UEpVqfS/s0UN7cHCvi7v3bmDq2Bjy+fpbopsNkO/0+2SL
      5u3g4CDuzC+gkM8zAJQ+z/OQsxoLpGUaODy9L/Ez27nmf+P2fRyaSf71B2pTPB49MguAV4Go
      B3zfhxa7TTktSil4MDqegIsBoNStLC9hsFA/+8N2e3WbqTouNCvf8fYMAKWuWFzDQKG7058k
      UQCu3VnC1L7kalUSBoBS57mNtyGn4dHqOoYnpmAYyesIJGEAKHXSd9tvhO2tHgkA95fWMDIy
      3HLfQS8xB8RQz8gOJr+KjgNOGgbZ7vYGAJg9uAefffJR4kD4+DJKwWNeBqXU1e770SLPm68S
      E11MI7rUaic3xuVzFgZyybNVJw+f5DKplDKlFKTnAGjdCI7f7BYt9J2OH1BKwVNaXYii+0vC
      KhClyvM8KH9rjeCtDJyRm2xDMACUqtu352Do3b3m3y4U8XUFWmEAKFWPHt7F5FjylZmt6PSM
      0GkIGABKjVIKnlPu6q0Pm7lU2kkI2Aim1CwtLaFg9fcYog3ppPd4BqDUjI6OwpGd98qmJWmh
      PICT41LKdF3HTluGLh6CnXV0tOuodmsU9UHdkql9PA7a5YQQGN9zACsPb0DTmjRE1eNlHpu1
      UzeZn1K5grW1YscfFpVKRdm2vblvIeqQ67r49t/+I+4VW02DooDI1ObRqzdKKbw0m8Nzz3+u
      o+8T6DwzS4uLPANQujRNw4G9E5gvFdtv3ISdz2N0fKKLR1VTKZfZCKZ06bqOM5+bwabrMj3C
      AFDqfCnR9/VQEwgwANQDNxZWurq/rvUssyOMeqHqdDYirFPdGlCvwI4wStnq2hp+c/1Bvw+j
      KQaAUvV/71/Eo2rzKkuacwR1ggGgVHU6DXq/MACUqnOvvIwvHBttuU0nZ4F0zhRsBFPK8vkc
      vvmnr2FmbDt9ro2D4rsVCAaAUjc6MoyvfOHklj8vxJPpTLqNt0JQT0xNDANKAiL5Nze47ydZ
      8mCWgO/70BLWD4hPpxI/awgwANQj5YrbfgnHplr/8ieFJ/q86ZxCHBBDvXLqxBHkReP0KJ1V
      a9oMbNe0hj9d1+uec14g6qtCoYDJoeTb7tsNXr8yv47i2lrie9vFAFBPaJqGv37jDzFgtO4X
      SArB4oaG7731AR7c736PMgNAPSGEwOz0QXznjS9hNLf5qzkrjon//J9PUC5tfsX5VhgA6hkh
      BJ49dRx/9uppaNh8D/FKRce/vfkeVpaXu3ZMDAD13OdPzKCg1jGgOXjxgI5RuYyCuwRLlgC0
      7uR6WNbxvbc/xL2Fxa4cC8cEU8/5vo+rN+bwzz/4EcoecGPNgICCggj7CdpdHcprLr766klM
      zxzc8nEszt/hGYB6T9d1PHP8CF575XmcnpmEAQ9K6IDQwgmsomeBpDCUpYnv/+RTXLr02baO
      hQGgvpkYH8NPLz9EXpXrljACameJ6Ixu8ZVilFKo+Dre+tVtXPjtlS3fJsEAUN8cPzoLQGFN
      PJk9OqlXN7pIRrx94AsTP/rwHn753m/D8HRMMQDUR5Zp4s9fewGWqiC43UEI0dCTGw9A8Be8
      p4SOn11exU9++gFkwvpgzUgl2Qim/lJKYa1YxN//09v4aL75Nf6OqjhK4rlpG+e+9HLiOmFx
      i7dv8gxA/SWEgJISq+uVujp/s2pQ651puHC7infePZ+4UmTD5mAViHYA1/Ww8KjS8PqWGrZC
      w8d3Xfzw3fMdVYcYAOq7iYlxvP7S4dp4gTY6GgkmBD5ZcPHmf5+H67qRl2ufLT56hNXlJSgl
      GQDqP03T8JdfPYezx0Ya3tv6KDCBy4se/uudX6JSLof7UkpBX/g1jvhXMendZQBoZzAMA3/1
      tXMY28KNcq1cXwJ+8M57KG08uc1CmXlMjhZwenqEAaCdY2J8FN/6xqsYtZ9cEt324HchcHtV
      w/d/+B42NjYAAEp7ctWTAaAdQwiB0yeP4dvf+H3oymu6IuSmQyEEFtZ1/Mfb57GxvoEqrHC/
      DADtKEIIHDsyiy+emkTQOdaV2SCEwP2SgX9/+32slRz4fq3BzQDQjmPbNv7olWfrCmerPoLN
      eFDWcfnqPAyj1lHGANCONDQ40NGgma20ET4rDuDq/CoABoB2qOGhYTw7PYSpgsSIJaFLByKh
      n2ArZ4OqsvDjS0VIqXgvEO1cnufB9304jotSaQM/+/AK/uV/r4XzC22m8IvYZ3Tl4Y1nXU6M
      RTvXw6UlLC+vwHEcVKoOzv3u81jbKOMXF29BCA0PK3rDZFvNQhEfZHN2fxlnT+3jGYB2trn5
      BZRLJRRyNg4dOgghBHzfR6lcxrf+7l+xWhWQ4snveKuzQjDWwJBVfPf1PPZPDjEA9HRSSuHm
      rTncXlzGP7z5AUq+Eb7ejqkcfPf1PPZNDLIRTE+H+OXPS5cvo1J18MUzz+NvvvnHmBpMLspJ
      0yL+zmQZk6OF2vvpHTJR9yilcO3a9fD5MydPYs/kOIQQODx9EN/5iy+jYNTf/hydHToagtlx
      A4ZeK/oMAD0VNE3D8ePHwueXr1zB0OBg+PzwzCG8dGwysV8gXi36+U0fC0vrtf2mdLxEqTp4
      4CCWV1brXts/PoTkqdQVhHRgyTJyfhGG8BFkgpdB6ak0OjqC+Mpjf/IHZ+EJE0r60KQL29Aw
      PpzHxNgwbMvGyMgwpPQx99G7GBuyalUjXgWi3UIpBc/zUKnUD6/M5/Nhp1qw3fydOaw/uMkA
      0O6ilEKpVKqbI0gIAcMwwgBEG8VsA9CuIoRAPp9vmFrR87zEhTgYANp1Wq0Zpus6crkcLMsC
      wADQLmUYydd3guqPruvI5/MMAO0+QgjkcrmGpVOT+ggYANq1TNOsex60BaINZAaAdiUhBEzT
      rJsjNLifKDptIgNAu1Ywg3QUA0CZYllWy3HDDADtaklngWD1GYABoF0u6AWOklLCcZza6LA+
      HRdRz5imCSEEqtVq+MvvOA5832cAaPcLzgK6rsNxnHDKdN/3WQWip9dmFsUL2gK2bddViRgA
      emrFG7edCHqJg/4BBoAyJxoCBoAySdM0WJbFAFA2xHuAgceN4z4dD1HPaZpWN06A/QCUGcHt
      EI7jQEoZjglgFYgyJegUc10X1WqVAaBsEULAsizous4qEGVTcBlUSi6UTRnFNgAR2BNMGccA
      UKYxAJRpDABlGgNAmcYAUKYxAJRpDABlGgNAmcYAUKYxAJRpDABlGgNAmcYAUKYxAJRpDABl
      GgNAmdaVACilIKVsWJuVaKfbVgCCAu+6LiqVSlcOiKiXujIrhGmaiQsTJy1NT7STbCsAQcEO
      Vt+OUkrBdd1wcQKGgHaiVOcFEkKEbYNgMQNN0xrC4HleOE0FUS+lFoBgoeKgGrS8vByu0qHr
      enjWcBwnPEMMDQ2ldThEiVKfGU4IAaUUTNOElBLVahWGYUBKCdM04ThOGAiiXuvZ1IjDw8Ph
      42CudhZ86reeBCBeyIOqULTfgEGgfuh7T3ClUoHruuxIo77oawCklPB9H47joFwuMwDUc30P
      QPRxdCVvol7oawCi1/2T+geI0tbXBTKCvgDDMGBZFgNAPdf3ABQKhfAxUa/1fYkkFnzqp75f
      BiXqJwaAMo0BoExjACjTGADKNAaAMo0BoExjACjTGADKNAaAMo0BoExjACjTGADKNAaAMo0B
      oExjACjTGADKNAaAMo0BoExjACjTGADKNAaAMo0BoExjACjTGADKNAaAMo0BoExjACjTGADK
      NAaAMo0BoExjACjTGADKNAaAMo0BoEwzXNft9zEQ9c3/A1mi3DXW75rDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SPQ per Category' width='192'>
      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
      CuVvTXFJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SPQ per Category (2)' width='192'>
      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
      YIXfaP4f/YzUERdWLZoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SPQ per Item vs Time' width='192'>
      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
      QlaDsikAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales Dashboard' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales vs Time' width='192'>
      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
      NQ2+DKxte3oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 20' width='192'>
      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
      AiDM9v/02B5DZ/l7XwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State of the Company' width='192'>
      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
      pEIAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
